"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_core_geometry_support_quantizationUtils_js-node_modules_arcgis_co-a9e48e"],{

/***/ "./node_modules/@arcgis/core/geometry/support/quantizationUtils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@arcgis/core/geometry/support/quantizationUtils.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "equals": () => (/* binding */ c),
/* harmony export */   "getQuantizedBoundsCoordsArray": () => (/* binding */ F),
/* harmony export */   "getQuantizedBoundsCoordsArrayArray": () => (/* binding */ V),
/* harmony export */   "getQuantizedBoundsPaths": () => (/* binding */ _),
/* harmony export */   "getQuantizedBoundsPoints": () => (/* binding */ Y),
/* harmony export */   "getQuantizedBoundsRings": () => (/* binding */ A),
/* harmony export */   "quantizeBounds": () => (/* binding */ h),
/* harmony export */   "quantizeExtent": () => (/* binding */ w),
/* harmony export */   "quantizeGeometry": () => (/* binding */ d),
/* harmony export */   "quantizeMultipoint": () => (/* binding */ G),
/* harmony export */   "quantizePaths": () => (/* binding */ N),
/* harmony export */   "quantizePoint": () => (/* binding */ L),
/* harmony export */   "quantizePoints": () => (/* binding */ I),
/* harmony export */   "quantizePolygon": () => (/* binding */ O),
/* harmony export */   "quantizePolyline": () => (/* binding */ S),
/* harmony export */   "quantizeRings": () => (/* binding */ g),
/* harmony export */   "quantizeX": () => (/* binding */ s),
/* harmony export */   "quantizeY": () => (/* binding */ f),
/* harmony export */   "toQuantizationTransform": () => (/* binding */ m),
/* harmony export */   "unquantizeBounds": () => (/* binding */ M),
/* harmony export */   "unquantizeCoordsArray": () => (/* binding */ z),
/* harmony export */   "unquantizeCoordsArrayArray": () => (/* binding */ T),
/* harmony export */   "unquantizeExtent": () => (/* binding */ j),
/* harmony export */   "unquantizeMultipoint": () => (/* binding */ U),
/* harmony export */   "unquantizePaths": () => (/* binding */ P),
/* harmony export */   "unquantizePoint": () => (/* binding */ k),
/* harmony export */   "unquantizePoints": () => (/* binding */ E),
/* harmony export */   "unquantizePolygon": () => (/* binding */ q),
/* harmony export */   "unquantizePolyline": () => (/* binding */ v),
/* harmony export */   "unquantizeRings": () => (/* binding */ b),
/* harmony export */   "unquantizeX": () => (/* binding */ p),
/* harmony export */   "unquantizeY": () => (/* binding */ y)
/* harmony export */ });
/* harmony import */ var _jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function l(n){return n&&"upperLeft"===n.originPosition}const i=(n,t,e)=>[t,e],o=(n,t,e)=>[t,e,n[2]],a=(n,t,e)=>[t,e,n[2],n[3]];function m(n){if(!n)return null;return{originPosition:"upper-left"===n.originPosition?"upperLeft":"lower-left"===n.originPosition?"lowerLeft":n.originPosition,scale:n.tolerance?[n.tolerance,n.tolerance]:[1,1],translate:null!=n.extent?[n.extent.xmin,n.extent.ymax]:[0,0]}}function c(n,t){if(n===t||null==n&&null==t)return!0;if(null==n||null==t)return!1;let e,r,u,i,o,a;return l(n)?(e=n.translate[0],r=n.translate[1],u=n.scale[0]):(e=null!=n.extent?n.extent.xmin:0,r=null!=n.extent?n.extent.ymax:0,u=n.tolerance),l(t)?(i=t.translate[0],o=t.translate[1],a=t.scale[0]):(i=null!=t.extent?t.extent.xmin:0,o=null!=t.extent?t.extent.ymax:0,a=t.tolerance),e===i&&r===o&&u===a}function s({scale:n,translate:t},e){return Math.round((e-t[0])/n[0])}function f({scale:n,translate:t},e){return Math.round((t[1]-e)/n[1])}function x(n,t,e){const r=[];let u,l,i,o;for(let a=0;a<e.length;a++){const m=e[a];a>0?(i=s(n,m[0]),o=f(n,m[1]),i===u&&o===l||(r.push(t(m,i-u,o-l)),u=i,l=o)):(u=s(n,m[0]),l=f(n,m[1]),r.push(t(m,u,l)))}return r.length>0?r:null}function h(n,t,e){return t[0]=s(n,e[0]),t[3]=f(n,e[1]),t[2]=s(n,e[2]),t[1]=f(n,e[3]),t}function I(n,t,e,r){return x(n,e?r?a:o:r?o:i,t)}function g(n,t,e,r){const u=[],l=e?r?a:o:r?o:i;for(let i=0;i<t.length;i++){const e=x(n,l,t[i]);e&&e.length>=3&&u.push(e)}return u.length?u:null}function N(n,t,e,r){const u=[],l=e?r?a:o:r?o:i;for(let i=0;i<t.length;i++){const e=x(n,l,t[i]);e&&e.length>=2&&u.push(e)}return u.length?u:null}function p({scale:n,translate:t},e){return e*n[0]+t[0]}function y({scale:n,translate:t},e){return t[1]-e*n[1]}function z(n,t,e){const r=new Array(e.length);if(!e.length)return r;const[u,l]=n.scale;let i=p(n,e[0][0]),o=y(n,e[0][1]);r[0]=t(e[0],i,o);for(let a=1;a<e.length;a++){const n=e[a];i+=n[0]*u,o-=n[1]*l,r[a]=t(n,i,o)}return r}function T(n,t,e){const r=new Array(e.length);for(let u=0;u<e.length;u++)r[u]=z(n,t,e[u]);return r}function M(n,t,e){return e?(t[0]=p(n,e[0]),t[1]=y(n,e[3]),t[2]=p(n,e[2]),t[3]=y(n,e[1]),t):[p(n,t[0]),y(n,t[3]),p(n,t[2]),y(n,t[1])]}function E(n,t,e,r){return z(n,e?r?a:o:r?o:i,t)}function P(n,t,e,r){return T(n,e?r?a:o:r?o:i,t)}function b(n,t,e,r){return T(n,e?r?a:o:r?o:i,t)}function F(n,t,e){let[r,u]=e[0],l=Math.min(r,t[0]),i=Math.min(u,t[1]),o=Math.max(r,t[2]),a=Math.max(u,t[3]);for(let m=1;m<e.length;m++){const[n,t]=e[m];r+=n,u+=t,n<0&&(l=Math.min(l,r)),n>0&&(o=Math.max(o,r)),t<0?i=Math.min(i,u):t>0&&(a=Math.max(a,u))}return n[0]=l,n[1]=i,n[2]=o,n[3]=a,n}function V(n,t){if(!t.length)return null;n[0]=n[1]=Number.POSITIVE_INFINITY,n[2]=n[3]=Number.NEGATIVE_INFINITY;for(let e=0;e<t.length;e++)F(n,n,t[e]);return n}function Y(n){const t=[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY];return F(t,t,n)}function _(n){return V([0,0,0,0],n)}function A(n){return V([0,0,0,0],n)}function w(n,t,e,r,u){return t.xmin=s(n,e.xmin),t.ymin=f(n,e.ymin),t.xmax=s(n,e.xmax),t.ymax=f(n,e.ymax),t!==e&&(r&&(t.zmin=e.zmin,t.zmax=e.zmax),u&&(t.mmin=e.mmin,t.mmax=e.mmax)),t}function G(n,t,e,r,u){return t.points=I(n,e.points,r,u)??[],t}function L(n,t,e,r,u){return t.x=s(n,e.x),t.y=f(n,e.y),t!==e&&(r&&(t.z=e.z),u&&(t.m=e.m)),t}function O(n,t,e,r,u){const l=g(n,e.rings,r,u);return l?(t.rings=l,t):null}function S(n,t,e,r,u){const l=N(n,e.paths,r,u);return l?(t.paths=l,t):null}function d(l,i){return l&&i?(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isPoint)(i)?L(l,{},i,!1,!1):(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isPolyline)(i)?S(l,{},i,!1,!1):(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isPolygon)(i)?O(l,{},i,!1,!1):(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isMultipoint)(i)?G(l,{},i,!1,!1):(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_0__.isExtent)(i)?w(l,{},i,!1,!1):null:null}function j(n,t,e,r,u){return t.xmin=p(n,e.xmin),t.ymin=y(n,e.ymin),t.xmax=p(n,e.xmax),t.ymax=y(n,e.ymax),t!==e&&(r&&(t.zmin=e.zmin,t.zmax=e.zmax),u&&(t.mmin=e.mmin,t.mmax=e.mmax)),t}function U(n,t,e,r,u){return null!=e&&(t.points=E(n,e.points,r,u)),t}function k(n,t,e,r,u){return null==e||(t.x=p(n,e.x),t.y=y(n,e.y),t!==e&&(r&&(t.z=e.z),u&&(t.m=e.m))),t}function q(n,t,e,r,u){return null!=e&&(t.rings=b(n,e.rings,r,u)),t}function v(n,t,e,r,u){return null!=e&&(t.paths=P(n,e.paths,r,u)),t}


/***/ }),

/***/ "./node_modules/@arcgis/core/statistics/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@arcgis/core/statistics/utils.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "calculateClassBreaks": () => (/* binding */ D),
/* harmony export */   "calculateHistogram": () => (/* binding */ M),
/* harmony export */   "calculatePercentile": () => (/* binding */ p),
/* harmony export */   "calculateStatistics": () => (/* binding */ d),
/* harmony export */   "calculateStringStatistics": () => (/* binding */ f),
/* harmony export */   "calculateUniqueValuesCount": () => (/* binding */ x),
/* harmony export */   "createClassBreaksDefinition": () => (/* binding */ N),
/* harmony export */   "createUVResult": () => (/* binding */ F),
/* harmony export */   "getAttributeComparator": () => (/* binding */ v),
/* harmony export */   "getEqualIntervalBins": () => (/* binding */ $),
/* harmony export */   "getNormalizedValue": () => (/* binding */ z),
/* harmony export */   "isNullCountSupported": () => (/* binding */ m),
/* harmony export */   "processNullValue": () => (/* binding */ c),
/* harmony export */   "processSummaryStatisticsResult": () => (/* binding */ g),
/* harmony export */   "resolveCBResult": () => (/* binding */ S),
/* harmony export */   "statisticTypes": () => (/* binding */ s)
/* harmony export */ });
/* harmony import */ var _rest_support_ClassBreaksDefinition_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rest/support/ClassBreaksDefinition.js */ "./node_modules/@arcgis/core/rest/support/ClassBreaksDefinition.js");
/* harmony import */ var _rest_support_generateRendererUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rest/support/generateRendererUtils.js */ "./node_modules/@arcgis/core/rest/support/generateRendererUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const t="<Null>",l="equal-interval",i=1,a=5,r=10,o=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,u=new Set(["esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble"]),s=["min","max","avg","stddev","count","sum","variance","nullcount","median"];function c(n){return null==n||"string"==typeof n&&!n?t:n}function m(n){const e=null!=n.normalizationField||null!=n.normalizationType,t=null!=n.minValue||null!=n.maxValue,l=!!n.sqlExpression&&n.supportsSQLExpression;return!e&&!t&&!l}function f(n){const e=n.returnDistinct?[...new Set(n.values)]:n.values,t=e.filter((n=>null!=n)).sort(),l=t.length,i={count:l,min:t[0],max:t[l-1]};return n.supportsNullCount&&(i.nullcount=e.length-l),n.percentileParams&&(i.median=p(e,n.percentileParams)),i}function d(n){const{values:e,useSampleStdDev:t,supportsNullCount:l}=n;let i=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY,r=null,o=null,u=null,s=null,c=0;const m=null==n.minValue?-1/0:n.minValue,f=null==n.maxValue?1/0:n.maxValue;for(const p of e)Number.isFinite(p)?p>=m&&p<=f&&(r=null===r?p:r+p,i=Math.min(i,p),a=Math.max(a,p),c++):"string"==typeof p&&c++;if(c&&null!=r){o=r/c;let n=0;for(const t of e)Number.isFinite(t)&&t>=m&&t<=f&&(n+=(t-o)**2);s=t?c>1?n/(c-1):0:c>0?n/c:0,u=Math.sqrt(s)}else i=null,a=null;const d={avg:o,count:c,max:a,min:i,stddev:u,sum:r,variance:s};return l&&(d.nullcount=e.length-c),n.percentileParams&&(d.median=p(e,n.percentileParams)),d}function p(n,e){const{fieldType:t,value:l,orderBy:i,isDiscrete:a}=e,r=v(t,"desc"===i);if(0===(n=[...n].filter((n=>null!=n)).sort(((n,e)=>r(n,e)))).length)return null;if(l<=0)return n[0];if(l>=1)return n[n.length-1];const o=(n.length-1)*l,u=Math.floor(o),s=u+1,c=o%1,m=n[u],f=n[s];return s>=n.length||a||"string"==typeof m||"string"==typeof f?m:m*(1-c)+f*c}function v(n,e){const t=e?1:-1,l=h(e),i=V(e);if(!(!!n&&["esriFieldTypeDate","esriFieldTypeString","esriFieldTypeGUID","esriFieldTypeGlobalID",...u].includes(n)))return(n,e)=>"number"==typeof n&&"number"==typeof e?l(n,e):"string"==typeof n&&"string"==typeof e?i(n,e):t;if("esriFieldTypeDate"===n)return(n,e)=>{const i=new Date(n).getTime(),a=new Date(e).getTime();return isNaN(i)||isNaN(a)?t:l(i,a)};if(u.has(n))return(n,e)=>l(n,e);if("esriFieldTypeString"===n)return(n,e)=>i(n,e);if("esriFieldTypeGUID"===n||"esriFieldTypeGlobalID"===n){const n=V(e);return(e,t)=>n(T(e),T(t))}return e?(n,e)=>1:(n,e)=>-1}function b(n,e,t){if(t){if(null==n)return null==e?0:1;if(null==e)return-1}else{if(null==n)return null==e?0:-1;if(null==e)return 1}return null}function V(n){return n?(n,e)=>{const t=b(n,e,!0);return null!=t?t:(n=n.toUpperCase())>(e=e.toUpperCase())?-1:n<e?1:0}:(n,e)=>{const t=b(n,e,!1);return null!=t?t:(n=n.toUpperCase())<(e=e.toUpperCase())?-1:n>e?1:0}}function h(n){return n?(n,e)=>{const t=b(n,e,!0);return null!=t?t:e-n}:(n,e)=>{const t=b(n,e,!1);return null!=t?t:n-e}}function T(n){return n.substr(24,12)+n.substr(19,4)+n.substr(16,2)+n.substr(14,2)+n.substr(11,2)+n.substr(9,2)+n.substr(6,2)+n.substr(4,2)+n.substr(2,2)+n.substr(0,2)}function g(n,e){let t;for(t in n)s.includes(t)&&(Number.isFinite(n[t])||(n[t]=null));return e?(["avg","stddev","variance"].forEach((e=>{null!=n[e]&&(n[e]=Math.ceil(n[e]??0))})),n):n}function x(n){const e={};for(let t of n)(null==t||"string"==typeof t&&""===t.trim())&&(t=null),null==e[t]?e[t]={count:1,data:t}:e[t].count++;return{count:e}}function y(n){return"coded-value"!==n?.type?[]:n.codedValues.map((n=>n.code))}function F(n,e,t,l){const i=n.count,a=[];if(t&&e){const n=[],t=y(e[0]);for(const i of t)if(e[1]){const t=y(e[1]);for(const a of t)if(e[2]){const t=y(e[2]);for(const e of t)n.push(`${c(i)}${l}${c(a)}${l}${c(e)}`)}else n.push(`${c(i)}${l}${c(a)}`)}else n.push(i);for(const e of n)i.hasOwnProperty(e)||(i[e]={data:e,count:0})}for(const r in i){const n=i[r];a.push({value:n.data,count:n.count,label:n.label})}return{uniqueValueInfos:a}}function z(n,e,t,l){let i=null;switch(e){case"log":0!==n&&(i=Math.log(n)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(l)&&0!==l&&(i=n/l*100);break;case"field":Number.isFinite(t)&&0!==t&&(i=n/t);break;case"natural-log":n>0&&(i=Math.log(n));break;case"square-root":n>0&&(i=n**.5)}return i}function D(n,t){const l=N({field:t.field,normalizationType:t.normalizationType,normalizationField:t.normalizationField,classificationMethod:t.classificationMethod,standardDeviationInterval:t.standardDeviationInterval,breakCount:t.numClasses||a});return n=I(n,t.minValue,t.maxValue),(0,_rest_support_generateRendererUtils_js__WEBPACK_IMPORTED_MODULE_1__.createGenerateRendererClassBreaks)({definition:l,values:n,normalizationTotal:t.normalizationTotal})}function I(n,e,t){const l=e??-1/0,i=t??1/0;return n.filter((n=>Number.isFinite(n)&&n>=l&&n<=i))}function N(e){const{breakCount:t,field:a,normalizationField:r,normalizationType:o}=e,u=e.classificationMethod||l,s="standard-deviation"===u?e.standardDeviationInterval||i:void 0;return new _rest_support_ClassBreaksDefinition_js__WEBPACK_IMPORTED_MODULE_0__["default"]({breakCount:t,classificationField:a,classificationMethod:u,normalizationField:"field"===o?r:void 0,normalizationType:o,standardDeviationInterval:s})}function S(n,e){let t=n.classBreaks;const l=t.length,i=t[0]?.minValue,a=t[l-1]?.maxValue,r="standard-deviation"===e,u=o;return t=t.map((n=>{const e=n.label,t={minValue:n.minValue,maxValue:n.maxValue,label:e};if(r&&e){const n=e.match(u),l=n?.map((n=>+n.trim()))??[];2===l.length?(t.minStdDev=l[0],t.maxStdDev=l[1],l[0]<0&&l[1]>0&&(t.hasAvg=!0)):1===l.length&&(e.includes("<")?(t.minStdDev=null,t.maxStdDev=l[0]):e.includes(">")&&(t.minStdDev=l[0],t.maxStdDev=null))}return t})),{minValue:i,maxValue:a,classBreakInfos:t,normalizationTotal:n.normalizationTotal}}function M(n,e){const t=C(n,e);if(null==t.min&&null==t.max)return{bins:[],minValue:t.min,maxValue:t.max,normalizationTotal:e.normalizationTotal};const l=t.intervals,i=t.min??0,a=t.max??0,r=l.map(((n,e)=>({minValue:l[e][0],maxValue:l[e][1],count:0})));for(const o of n)if(null!=o&&o>=i&&o<=a){const n=k(l,o);n>-1&&r[n].count++}return{bins:r,minValue:i,maxValue:a,normalizationTotal:e.normalizationTotal}}function C(n,e){const{field:t,classificationMethod:l,standardDeviationInterval:i,normalizationType:a,normalizationField:o,normalizationTotal:u,minValue:s,maxValue:c}=e,f=e.numBins||r;let p=null,v=null,b=null;if((!l||"equal-interval"===l)&&!a){if(null!=s&&null!=c)p=s,v=c;else{const e=d({values:n,minValue:s,maxValue:c,useSampleStdDev:!a,supportsNullCount:m({normalizationType:a,normalizationField:o,minValue:s,maxValue:c})});p=e.min??null,v=e.max??null}b=$(p??0,v??0,f)}else{const{classBreaks:e}=D(n,{field:t,normalizationType:a,normalizationField:o,normalizationTotal:u,classificationMethod:l,standardDeviationInterval:i,minValue:s,maxValue:c,numClasses:f});p=e[0].minValue,v=e[e.length-1].maxValue,b=e.map((n=>[n.minValue,n.maxValue]))}return{min:p,max:v,intervals:b}}function k(n,e){let t=-1;for(let l=n.length-1;l>=0;l--){if(e>=n[l][0]){t=l;break}}return t}function $(n,e,t){const l=(e-n)/t,i=[];let a,r=n;for(let o=1;o<=t;o++)a=r+l,a=Number(a.toFixed(16)),i.push([r,o===t?e:a]),r=a;return i}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,