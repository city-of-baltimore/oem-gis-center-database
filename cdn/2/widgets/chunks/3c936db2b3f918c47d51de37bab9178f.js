"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_core_layers_graphics_sources_support_CSVSourceWorker_js"],{

/***/ "./node_modules/@arcgis/core/core/number.js":
/*!**************************************************!*\
  !*** ./node_modules/@arcgis/core/core/number.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "_parseInfo": () => (/* binding */ a),
/* harmony export */   "format": () => (/* binding */ s),
/* harmony export */   "getCustoms": () => (/* binding */ r),
/* harmony export */   "parse": () => (/* binding */ p),
/* harmony export */   "regexp": () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string.js */ "./node_modules/@arcgis/core/core/string.js");
/* harmony import */ var _intl_locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../intl/locale.js */ "./node_modules/@arcgis/core/intl/locale.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const n={ar:[".",","],bg:[","," "],bs:[",","."],ca:[",","."],cs:[","," "],da:[",","."],de:[",","."],"de-ch":[".","’"],el:[",","."],en:[".",","],"en-au":[".",","],es:[",","."],"es-mx":[".",","],et:[","," "],fi:[","," "],fr:[","," "],"fr-ch":[","," "],he:[".",","],hi:[".",",","#,##,##0.###"],hr:[",","."],hu:[","," "],id:[",","."],it:[",","."],"it-ch":[".","’"],ja:[".",","],ko:[".",","],lt:[","," "],lv:[","," "],mk:[",","."],nb:[","," "],nl:[",","."],pl:[","," "],pt:[",","."],"pt-pt":[","," "],ro:[",","."],ru:[","," "],sk:[","," "],sl:[",","."],sr:[",","."],sv:[","," "],th:[".",","],tr:[",","."],uk:[","," "],vi:[",","."],zh:[".",","]};function r(e=(0,_intl_locale_js__WEBPACK_IMPORTED_MODULE_1__.getLocale)()){let r=(e=e.toLowerCase())in n;if(!r){const t=e.split("-");t.length>1&&t[0]in n&&(e=t[0],r=!0),r||(e="en")}const[s,l,o="#,##0.###"]=n[e];return{decimal:s,group:l,pattern:o}}function s(e,t){const n=r((t={...t}).locale);t.customs=n;const s=t.pattern||n.pattern;return isNaN(e)||Math.abs(e)===1/0?null:o(e,s,t)}const l=/[#0,]*[#0](?:\.0*#*)?/;function o(e,t,n){const r=(n=n||{}).customs.group,s=n.customs.decimal,o=t.split(";"),c=o[0];if((t=o[e<0?1:0]||"-"+c).includes("%"))e*=100;else if(t.includes("‰"))e*=1e3;else{if(t.includes("¤"))throw new Error("currency notation not supported");if(t.includes("E"))throw new Error("exponential notation not supported")}const a=l,p=c.match(a);if(!p)throw new Error("unable to find a number expression in pattern: "+t);return!1===n.fractional&&(n.places=0),t.replace(a,i(e,p[0],{decimal:s,group:r,places:n.places,round:n.round}))}function i(e,t,n){!0===(n=n||{}).places&&(n.places=0),n.places===1/0&&(n.places=6);const r=t.split("."),s="string"==typeof n.places&&n.places.indexOf(",");let l=n.places;s?l=n.places.substring(s+1):+l>=0||(l=(r[1]||[]).length),n.round<0||(e=Number(e.toFixed(Number(l))));const o=String(Math.abs(e)).split("."),i=o[1]||"";if(r[1]||n.places){s&&(n.places=n.places.substring(0,s));const e=void 0!==n.places?n.places:r[1]&&r[1].lastIndexOf("0")+1;+e>i.length&&(o[1]=i.padEnd(Number(e),"0")),+l<i.length&&(o[1]=i.substr(0,Number(l)))}else o[1]&&o.pop();const c=r[0].replace(",","");let a=c.indexOf("0");-1!==a&&(a=c.length-a,a>o[0].length&&(o[0]=o[0].padStart(a,"0")),c.includes("#")||(o[0]=o[0].substr(o[0].length-a)));let p,u,d=r[0].lastIndexOf(",");if(-1!==d){p=r[0].length-d-1;const e=r[0].substr(0,d);d=e.lastIndexOf(","),-1!==d&&(u=e.length-d-1)}const g=[];for(let f=o[0];f;){const e=f.length-p;g.push(e>0?f.substr(e):f),f=e>0?f.slice(0,e):"",u&&(p=u,u=void 0)}return o[0]=g.reverse().join(n.group||","),o.join(n.decimal||".")}function c(e){return a(e).regexp}function a(t){const n=r((t=t||{}).locale),s=t.pattern||n.pattern,o=n.group,i=n.decimal;let c=1;if(s.includes("%"))c/=100;else if(s.includes("‰"))c/=1e3;else if(s.includes("¤"))throw new Error("currency notation not supported");const a=s.split(";");1===a.length&&a.push("-"+a[0]);const p=g(a,(n=>(n="(?:"+(0,_string_js__WEBPACK_IMPORTED_MODULE_0__.escapeRegExpString)(n,".")+")").replace(l,(e=>{const n={signed:!1,separator:t.strict?o:[o,""],fractional:t.fractional,decimal:i,exponent:!1},r=e.split(".");let s=t.places;1===r.length&&1!==c&&(r[1]="###"),1===r.length||0===s?n.fractional=!1:(void 0===s&&(s=t.pattern?r[1].lastIndexOf("0")+1:1/0),s&&null==t.fractional&&(n.fractional=!0),!t.places&&+s<r[1].length&&(s+=","+r[1].length),n.places=s);const l=r[0].split(",");return l.length>1&&(n.groupSize=l.pop().length,l.length>1&&(n.groupSize2=l.pop().length)),"("+u(n)+")"}))),!0);return{regexp:p.replaceAll(/[\xa0 ]/g,"[\\s\\xa0]"),group:o,decimal:i,factor:c}}function p(e,t){const n=a(t),r=new RegExp("^"+n.regexp+"$").exec(e);if(!r)return NaN;let s=r[1];if(!r[1]){if(!r[2])return NaN;s=r[2],n.factor*=-1}return s=s.replaceAll(new RegExp("["+n.group+"\\s\\xa0]","g"),"").replace(n.decimal,"."),Number(s)*n.factor}function u(e){"places"in(e=e||{})||(e.places=1/0),"string"!=typeof e.decimal&&(e.decimal="."),"fractional"in e&&!/^0/.test(String(e.places))||(e.fractional=[!0,!1]),"exponent"in e||(e.exponent=[!0,!1]),"eSigned"in e||(e.eSigned=[!0,!1]);const t=d(e),n=g(e.fractional,(t=>{let n="";return t&&0!==e.places&&(n="\\"+e.decimal,e.places===1/0?n="(?:"+n+"\\d+)?":n+="\\d{"+e.places+"}"),n}),!0);let r=t+n;return n&&(r="(?:(?:"+r+")|(?:"+n+"))"),r+g(e.exponent,(t=>t?"([eE]"+d({signed:e.eSigned})+")":""))}function d(t){"signed"in(t=t||{})||(t.signed=[!0,!1]),"separator"in t?"groupSize"in t||(t.groupSize=3):t.separator="";return g(t.signed,(e=>e?"[-+]":""),!0)+g(t.separator,(n=>{if(!n)return"(?:\\d+)";" "===(n=(0,_string_js__WEBPACK_IMPORTED_MODULE_0__.escapeRegExpString)(n))?n="\\s":" "===n&&(n="\\s\\xa0");const r=t.groupSize,s=t.groupSize2;if(s){const e="(?:0|[1-9]\\d{0,"+(s-1)+"}(?:["+n+"]\\d{"+s+"})*["+n+"]\\d{"+r+"})";return r-s>0?"(?:"+e+"|(?:0|[1-9]\\d{0,"+(r-1)+"}))":e}return"(?:0|[1-9]\\d{0,"+(r-1)+"}(?:["+n+"]\\d{"+r+"})*)"}),!0)}const g=(e,t,n)=>{if(!(e instanceof Array))return t(e);const r=[];for(let s=0;s<e.length;s++)r.push(t(e[s]));return f(r.join("|"),Boolean(n))},f=(e,t)=>"("+(t?"?:":"")+e+")";


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/csv/csv.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/csv/csv.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "extractFieldNamesAndAliasesFromRow": () => (/* binding */ f),
/* harmony export */   "inferDelimiterAndLocationInfo": () => (/* binding */ c),
/* harmony export */   "inferFieldType": () => (/* binding */ b),
/* harmony export */   "inferFields": () => (/* binding */ p),
/* harmony export */   "isValidDate": () => (/* binding */ h),
/* harmony export */   "parseNumber": () => (/* binding */ N),
/* harmony export */   "parseRows": () => (/* binding */ a),
/* harmony export */   "readRowParts": () => (/* binding */ u),
/* harmony export */   "readRows": () => (/* binding */ s),
/* harmony export */   "splitSingleRow": () => (/* binding */ d)
/* harmony export */ });
/* harmony import */ var _core_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/number.js */ "./node_modules/@arcgis/core/core/number.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const n=/^\s*"([\S\s]*)"\s*$/,i=/""/g,r="\n",l=[","," ",";","|","\t"];function*o(e,t,n){let i=0;for(;i<=e.length;){const r=e.indexOf(t,i),l=e.substring(i,r>-1?r:void 0);i+=l.length+t.length,n&&!l.trim()||(yield l)}}function s(e){const t=e.includes("\r\n")?"\r\n":r;return o(e,t,!0)}function u(e,t){return o(e,t,!1)}function c(e,t,n){e=e.trim(),t=t?.trim();const i=[],r=Array.from(new Set([n?.delimiter,...l])).filter((e=>null!=e));for(const l of r){const n=d(e,l).length,r=d(t,l).length??n;n>1&&i.push({weight:Math.min(n,r),delimiter:l})}const o=i.sort((({weight:e},{weight:t})=>t-e)).map((({delimiter:e})=>e));for(const l of o){const t=m(f(e,l).names,n?.longitudeField,n?.latitudeField);if(t.longitudeFieldName&&t.latitudeFieldName)return{delimiter:l,locationInfo:t}}return{delimiter:o[0],locationInfo:null}}function*a(e,t,l,o=(()=>Object.create(null))){const c=s(e);c.next();let a="",f="",d=0,m=o(),p=0;e:for(const s of c){const e=u(s,l);for(const r of e)if(a+=f+r,f="",d+=g(r),d%2==0){if(d>0){const e=n.exec(a);if(!e){m=o(),p=0,a="",d=0;continue e}m[t[p]]=e[1].replaceAll(i,'"'),p++}else m[t[p]]=a,p++;a="",d=0}else f=l;0===d?(yield m,m=o(),p=0):f=r}}function f(e,n){const i=d(e,n).filter((e=>null!=e)),r=i.map((e=>(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeFieldName)(e)));for(let t=r.length-1;t>=0;t--)r[t]||(r.splice(t,1),i.splice(t,1));return{names:r,aliases:i}}function d(e,t){if(!e?.length)return[];const r=[];let l="",o="",s=0;const c=u(e,t);for(const u of c)if(l+=o+u,o="",s+=g(u),s%2==0){if(s>0){const e=n.exec(l);e&&r.push(e[1].replaceAll(i,'"'))}else r.push(l);l="",s=0}else o=t;return r}function g(e){let t=0,n=0;for(n=e.indexOf('"',n);n>=0;)t++,n=e.indexOf('"',n+1);return t}function m(e,n,i){n=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeFieldName)(n)?.toLowerCase(),i=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeFieldName)(i)?.toLowerCase();const r=e.map((e=>e.toLowerCase())),l=n?e[r.indexOf(n)]:null,o=i?e[r.indexOf(i)]:null;return{longitudeFieldName:l||e[r.indexOf(w.find((e=>r.includes(e))))],latitudeFieldName:o||e[r.indexOf(F.find((e=>r.includes(e))))]}}function p(e,t,n,i,r){const l=[],o=a(e,n,t),s=[];for(const u of o){if(10===s.length)break;s.push(u)}for(let u=0;u<n.length;u++){const e=n[u],t=i[u];if(e===r.longitudeFieldName||e===r.latitudeFieldName)l.push({name:e,type:"esriFieldTypeDouble",alias:t});else{let n,i;switch(b(s.map((t=>t[e])))){case"integer":n="esriFieldTypeInteger";break;case"double":n="esriFieldTypeDouble";break;case"date":n="esriFieldTypeDate",i=36;break;default:n="esriFieldTypeString",i=255}l.push({name:e,type:n,alias:t,length:i})}}return l}function b(e){if(!e.length)return"string";const t=/[^+-.,0-9]/;return e.map((e=>{let n=!1;if(""!==e){if(t.test(e))n=!0;else{let t=N(e);if(!isNaN(t))return/[.,]/.test(e)||!Number.isInteger(t)||t>214783647||t<-214783648?"double":"integer";if(e.includes("E")){if(t=Number(e),!isNaN(t))return"double";if(e.includes(",")){if(e=e.replace(",","."),t=Number(e),!isNaN(t))return"double";n=!0}else n=!0}else n=!0}if(n){if(!/^[-]?\d*[.,]?\d*$/.test(e)){return h(new Date(e),e)?"date":"string"}return"string"}return"string"}})).reduce(((e,t)=>void 0===e?t:void 0===t?e:e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))}function h(e,t){if(!e||"[object Date]"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let n=!0;if(!y&&/\d+\W*$/.test(t)){const e=t.match(/[a-zA-Z]{2,}/);if(e){let t=!1,i=0;for(;!t&&i<=e.length;)t=!x.test(e[i]),i++;n=!t}}return n}const N=function(){const t=(0,_core_number_js__WEBPACK_IMPORTED_MODULE_0__._parseInfo)(),n=new RegExp("^"+t.regexp+"$"),i=new RegExp("["+t.group+"\\s\\xa0]","g"),r=t.factor;return e=>{const l=n.exec(e);if(t.factor=r,!l)return NaN;let o=l[1];if(!l[1]){if(!l[2])return NaN;o=l[2],t.factor*=-1}return o=o.replace(i,"").replace(t.decimal,"."),+o*t.factor}}(),x=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,y=Number.isNaN(new Date("technology 10").getTime()),F=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point_y"],w=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point_x"];


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/CSVSourceWorker.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/CSVSourceWorker.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ k)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/asyncUtils.js */ "./node_modules/@arcgis/core/core/asyncUtils.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../geometry/projection.js */ "./node_modules/@arcgis/core/geometry/projection.js");
/* harmony import */ var _geometry_geometryAdapters_json_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../geometry/geometryAdapters/json.js */ "./node_modules/@arcgis/core/geometry/geometryAdapters/json.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../geometry/support/webMercatorUtils.js */ "./node_modules/@arcgis/core/geometry/support/webMercatorUtils.js");
/* harmony import */ var _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../OptimizedFeature.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedFeature.js");
/* harmony import */ var _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../OptimizedGeometry.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js");
/* harmony import */ var _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../data/FeatureStore.js */ "./node_modules/@arcgis/core/layers/graphics/data/FeatureStore.js");
/* harmony import */ var _data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../data/projectionSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js");
/* harmony import */ var _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../data/QueryEngine.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js");
/* harmony import */ var _csv_csv_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../csv/csv.js */ "./node_modules/@arcgis/core/layers/graphics/sources/csv/csv.js");
/* harmony import */ var _clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./clientSideDefaults.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js");
/* harmony import */ var _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../support/FieldsIndex.js */ "./node_modules/@arcgis/core/layers/support/FieldsIndex.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const C=(0,_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_17__.createDrawingInfo)("esriGeometryPoint"),v=["csv"],O=[0,0];class D{constructor(e,t){this.x=e,this.y=t}}class k{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t={}){this._loadOptions=e;const[i]=await Promise.all([this._fetch(t.signal),this._checkProjection(e?.parsingOptions?.spatialReference)]),n=P(i,e);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const r=await this._createFeatures(i);this._queryEngine.featureStore.addMany(r);const{fullExtent:s,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=s,o){const{start:e,end:t}=o;n.layerDefinition.timeInfo.timeExtent=[e,t]}return n}async applyEdits(){throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,_core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_2__.createTask)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.isAbortError)(e)||_core_Logger_js__WEBPACK_IMPORTED_MODULE_4__["default"].getLogger("esri.layers.CSVLayer").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:s,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();return{extent:s,timeExtent:o}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:n,customParameters:r}=this._loadOptions;if(!n)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:invalid-source","url not defined");const o=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_6__.urlToObject)(n);return(await (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(o.path,{query:{...o.query,...r},responseType:"text",signal:t})).data}_createQueryEngine(e){const{objectIdField:t,fields:i,extent:n,timeInfo:r}=e.layerDefinition,s=new _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_13__["default"]({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_15__.QueryEngine({fields:i,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:r,objectIdField:t,spatialReference:n.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:s})}async _createFeatures(e){const{latitudeFieldName:t,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:r,spatialReference:s}=this._queryEngine;let o=[];const d=[],y=r.fields.filter((e=>e.name!==n)).map((e=>e.name));let h=0;const g={};for(const a of r.fields)if("esriFieldTypeOID"!==a.type&&"esriFieldTypeGlobalID"!==a.type){const e=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_19__.getFieldDefaultValue)(a);void 0!==e&&(g[a.name]=e)}const w=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.parseRows)(e,y,this._delimiter,(0,_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_17__.createDefaultAttributesFunction)(g,n));for(const a of w){const e=this._parseCoordinateValue(a[t]),s=this._parseCoordinateValue(a[i]);if(null!=s&&null!=e&&!isNaN(e)&&!isNaN(s)){a[t]=e,a[i]=s;for(const e in a)if(e!==t&&e!==i)if(r.isDateField(e)){const t=new Date(a[e]);a[e]=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.isValidDate)(t,a[e])?t.getTime():null}else if(r.isNumericField(e)){const t=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.parseNumber)(a[e]);isNaN(t)?a[e]=null:a[e]=t}a[n]=h,h++,o.push(new D(s,e)),d.push(a)}}if(!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__.equals)({wkid:4326},s))if((0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__.isWebMercator)(s))for(const a of o)[a.x,a.y]=(0,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_10__.lngLatToXY)(a.x,a.y,O);else o=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.projectMany)(_geometry_geometryAdapters_json_js__WEBPACK_IMPORTED_MODULE_8__.jsonAdapter,o,_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__["default"].WGS84,s,null,null);const E=[];for(let a=0;a<o.length;a++){const{x:e,y:t}=o[a],i=d[a];i[n]=a+1,E.push(new _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_11__.OptimizedFeature(new _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_12__["default"]([],[e,t]),i,null,i[n]))}return E}_parseCoordinateValue(e){if(null==e||""===e)return null;let t=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.parseNumber)(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t}async _checkProjection(e){try{await (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_14__.checkProjectionSupport)(_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__.WGS84,e)}catch{throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:projection-not-supported","Projection not supported")}}}function P(e,t){const n=t.parsingOptions||{},r={delimiter:n.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:n.latitudeField,longitudeFieldName:n.longitudeField}},s=r.layerDefinition={name:(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_6__.getFilename)(t.url,v)||"csv",drawingInfo:C,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:n.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:n.spatialReference||{wkid:4326}}},a=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.readRows)(e),l=a.next().value?.trim(),c=a.next().value?.trim();if(!l)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:empty-csv","CSV is empty",{csv:e});const{delimiter:m,locationInfo:d}=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.inferDelimiterAndLocationInfo)(l,c,n);if(!m)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:l,secondLine:c,parsingOptions:n});if(!d)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:l,secondLine:c,parsingOptions:n});r.locationInfo=d,r.delimiter=m;const{names:u,aliases:p}=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.extractFieldNamesAndAliasesFromRow)(l,m),f=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.inferFields)(e,r.delimiter,u,p,r.locationInfo);if(n.fields?.length){const e=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_18__["default"](n.fields);for(const t of f){const i=e.get(t.name);i&&Object.assign(t,i)}}if(!f.some((e=>"esriFieldTypeOID"===e.type&&(s.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};s.objectIdField=e.name,f.unshift(e)}s.fields=f;const y=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_18__["default"](s.fields);if(r.locationInfo&&(r.locationInfo.latitudeFieldName=y.get(r.locationInfo.latitudeFieldName).name,r.locationInfo.longitudeFieldName=y.get(r.locationInfo.longitudeFieldName).name),s.timeInfo){const e=s.timeInfo;if(e.startTimeField){const t=y.get(e.startTimeField);t?(e.startTimeField=t.name,t.type="esriFieldTypeDate"):e.startTimeField=null}if(e.endTimeField){const t=y.get(e.endTimeField);t?(e.endTimeField=t.name,t.type="esriFieldTypeDate"):e.endTimeField=null}if(e.trackIdField){const t=y.get(e.trackIdField);e.trackIdField=t?t.name:null}e.startTimeField||e.endTimeField||(s.timeInfo=null)}return r}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createCapabilities": () => (/* binding */ c),
/* harmony export */   "createDefaultAttributesFunction": () => (/* binding */ i),
/* harmony export */   "createDefaultTemplate": () => (/* binding */ a),
/* harmony export */   "createDrawingInfo": () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/lang.js */ "./node_modules/@arcgis/core/core/lang.js");
/* harmony import */ var _data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/QueryEngineCapabilities.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngineCapabilities.js");
/* harmony import */ var _symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../symbols/support/defaultsJSON.js */ "./node_modules/@arcgis/core/symbols/support/defaultsJSON.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function o(t){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===t||"esriGeometryMultipoint"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPointSymbolJSON:"esriGeometryPolyline"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPolylineSymbolJSON:_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPolygonSymbolJSON}}}const u=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let n=1;function i(t,s){if((0,_core_has_js__WEBPACK_IMPORTED_MODULE_0__["default"])("esri-csp-restrictions"))return()=>({[s]:null,...t});try{let r=`this.${s} = null;`;for(const s in t){r+=`this${u.test(s)?`.${s}`:`["${s}"]`} = ${JSON.stringify(t[s])};`}const e=new Function(`\n      return class AttributesClass$${n++} {\n        constructor() {\n          ${r};\n        }\n      }\n    `)();return()=>new e}catch(r){return()=>({[s]:null,...t})}}function a(s={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_1__.clone)(s)}}]}function c(t,r){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:t},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:r,supportsDelete:r,supportsEditing:r,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:r,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:_data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__.queryCapabilities,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:r,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy9jaHVua3MvM2M5MzZkYjJiM2Y5MThjNDdkNTFkZTM3YmFiOTE3OGYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQytGLFNBQVMsdW5CQUF1bkIsYUFBYSwwREFBQyxJQUFJLDhCQUE4QixPQUFPLHFCQUFxQixnREFBZ0QsOEJBQThCLE9BQU8sNkJBQTZCLGdCQUFnQixjQUFjLEtBQUssVUFBVSxZQUFZLDZCQUE2QixpREFBaUQsZ0NBQWdDLGtCQUFrQixnQkFBZ0IsZ0RBQWdELFVBQVUsOENBQThDLCtCQUErQixLQUFLLHNFQUFzRSx5RUFBeUUsdUJBQXVCLDJFQUEyRSw0REFBNEQsZ0RBQWdELEdBQUcsa0JBQWtCLGFBQWEsb0RBQW9ELHdFQUF3RSxlQUFlLHFHQUFxRyxrREFBa0QsbUJBQW1CLHNDQUFzQyxpRUFBaUUsc0ZBQXNGLG1CQUFtQiw2QkFBNkIscUJBQXFCLHFIQUFxSCxnQ0FBZ0MsV0FBVyxrQkFBa0IseUJBQXlCLDhDQUE4QyxXQUFXLGVBQWUsRUFBRSxFQUFFLG1CQUFtQixrRUFBa0Usa0VBQWtFLGNBQWMsbUJBQW1CLGNBQWMsa0JBQWtCLHVEQUF1RCxRQUFRLDBCQUEwQiwrQkFBK0IsMkVBQTJFLGtCQUFrQixHQUFHLCtCQUErQix5QkFBeUIsOERBQUMsNEJBQTRCLFNBQVMsb0ZBQW9GLGdCQUFnQixlQUFlLGtPQUFrTyx3QkFBd0IsdUdBQXVHLFFBQVEsT0FBTyx5RUFBeUUsZ0JBQWdCLG9EQUFvRCxpQkFBaUIsV0FBVyxVQUFVLG9CQUFvQixvQkFBb0IsNEdBQTRHLGNBQWMsa0JBQWtCLDZNQUE2TSxtQ0FBbUMsU0FBUyxvRkFBb0YsYUFBYSxLQUFLLE1BQU0sVUFBVSx3RUFBd0UsaUJBQWlCLFdBQVcsY0FBYyxrQkFBa0Isc0ZBQXNGLDBEQUEwRCx1QkFBdUIsU0FBUyw4REFBQyxxQ0FBcUMsbUNBQW1DLE1BQU0sdUJBQXVCLFlBQVksY0FBYyxNQUFNLGFBQWEsTUFB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QXNGLG9DQUFvQyxXQUFXLFlBQVksZ0VBQUMsV0FBVywrTEFBK0wsbUJBQW1CLHFCQUFxQixnQ0FBZ0MsNkVBQTZFLG1CQUFtQiw4QkFBOEIseUVBQXlFLG1CQUFtQiw4QkFBOEIsNkJBQTZCLG9EQUFvRCxTQUE4Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ0o5NE87QUFDQTtBQUNBO0FBQ0E7QUFDc1QsY0FBYyxPQUFPLFVBQVUsMkVBQTJFLG9GQUFDLDRCQUE0Qix1RkFBQyxDQUFDLHNGQUFDLEdBQUcscUNBQXFDLFFBQVEsZ0JBQWdCLEdBQUcsd0RBQUcsc0NBQXNDLGNBQWMsRUFBRSxJQUFJLGNBQWMsR0FBRyxPQUFPLEVBQUUsa0JBQWtCLFVBQVUsY0FBYyxFQUFFLE9BQU8sRUFBRSxLQUFLLElBQUksc0JBQXNCLEVBQUUsNkRBQTZELE1BQU0seUJBQXlCLGNBQWMsR0FBRyxXQUFXLFNBQVMsV0FBVyxnQkFBZ0IsU0FBUyxZQUFZLGNBQWMsR0FBRyxlQUFlLEVBQUUsUUFBUSw2Q0FBNkMsV0FBVyxvREFBQyxLQUFLLEVBQUUsZ0JBQWdCLE9BQU8sV0FBVyxxQkFBcUIsdUJBQXVCLDhEQUE4RCxXQUFXLG1DQUFtQyxhQUFhLHdXQUF3VyxPQUFPLCtFQUFDLGVBQWUsK0VBQStFLG1CQUFtQixxQkFBcUIsVUFBVSxpVUFBd2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9jb3JlL251bWJlci5qcyIsIndlYnBhY2s6Ly9leGItY2xpZW50Ly4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9sYXllcnMvZ3JhcGhpY3Mvc291cmNlcy9jc3YvY3N2LmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2xheWVycy9ncmFwaGljcy9zb3VyY2VzL3N1cHBvcnQvQ1NWU291cmNlV29ya2VyLmpzIiwid2VicGFjazovL2V4Yi1jbGllbnQvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2xheWVycy9ncmFwaGljcy9zb3VyY2VzL3N1cHBvcnQvY2xpZW50U2lkZURlZmF1bHRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI3L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnR7ZXNjYXBlUmVnRXhwU3RyaW5nIGFzIGV9ZnJvbVwiLi9zdHJpbmcuanNcIjtpbXBvcnR7Z2V0TG9jYWxlIGFzIHR9ZnJvbVwiLi4vaW50bC9sb2NhbGUuanNcIjtjb25zdCBuPXthcjpbXCIuXCIsXCIsXCJdLGJnOltcIixcIixcIsKgXCJdLGJzOltcIixcIixcIi5cIl0sY2E6W1wiLFwiLFwiLlwiXSxjczpbXCIsXCIsXCLCoFwiXSxkYTpbXCIsXCIsXCIuXCJdLGRlOltcIixcIixcIi5cIl0sXCJkZS1jaFwiOltcIi5cIixcIuKAmVwiXSxlbDpbXCIsXCIsXCIuXCJdLGVuOltcIi5cIixcIixcIl0sXCJlbi1hdVwiOltcIi5cIixcIixcIl0sZXM6W1wiLFwiLFwiLlwiXSxcImVzLW14XCI6W1wiLlwiLFwiLFwiXSxldDpbXCIsXCIsXCLCoFwiXSxmaTpbXCIsXCIsXCLCoFwiXSxmcjpbXCIsXCIsXCLigK9cIl0sXCJmci1jaFwiOltcIixcIixcIuKAr1wiXSxoZTpbXCIuXCIsXCIsXCJdLGhpOltcIi5cIixcIixcIixcIiMsIyMsIyMwLiMjI1wiXSxocjpbXCIsXCIsXCIuXCJdLGh1OltcIixcIixcIsKgXCJdLGlkOltcIixcIixcIi5cIl0saXQ6W1wiLFwiLFwiLlwiXSxcIml0LWNoXCI6W1wiLlwiLFwi4oCZXCJdLGphOltcIi5cIixcIixcIl0sa286W1wiLlwiLFwiLFwiXSxsdDpbXCIsXCIsXCLCoFwiXSxsdjpbXCIsXCIsXCLCoFwiXSxtazpbXCIsXCIsXCIuXCJdLG5iOltcIixcIixcIsKgXCJdLG5sOltcIixcIixcIi5cIl0scGw6W1wiLFwiLFwiwqBcIl0scHQ6W1wiLFwiLFwiLlwiXSxcInB0LXB0XCI6W1wiLFwiLFwiwqBcIl0scm86W1wiLFwiLFwiLlwiXSxydTpbXCIsXCIsXCLCoFwiXSxzazpbXCIsXCIsXCLCoFwiXSxzbDpbXCIsXCIsXCIuXCJdLHNyOltcIixcIixcIi5cIl0sc3Y6W1wiLFwiLFwiwqBcIl0sdGg6W1wiLlwiLFwiLFwiXSx0cjpbXCIsXCIsXCIuXCJdLHVrOltcIixcIixcIsKgXCJdLHZpOltcIixcIixcIi5cIl0semg6W1wiLlwiLFwiLFwiXX07ZnVuY3Rpb24gcihlPXQoKSl7bGV0IHI9KGU9ZS50b0xvd2VyQ2FzZSgpKWluIG47aWYoIXIpe2NvbnN0IHQ9ZS5zcGxpdChcIi1cIik7dC5sZW5ndGg+MSYmdFswXWluIG4mJihlPXRbMF0scj0hMCkscnx8KGU9XCJlblwiKX1jb25zdFtzLGwsbz1cIiMsIyMwLiMjI1wiXT1uW2VdO3JldHVybntkZWNpbWFsOnMsZ3JvdXA6bCxwYXR0ZXJuOm99fWZ1bmN0aW9uIHMoZSx0KXtjb25zdCBuPXIoKHQ9ey4uLnR9KS5sb2NhbGUpO3QuY3VzdG9tcz1uO2NvbnN0IHM9dC5wYXR0ZXJufHxuLnBhdHRlcm47cmV0dXJuIGlzTmFOKGUpfHxNYXRoLmFicyhlKT09PTEvMD9udWxsOm8oZSxzLHQpfWNvbnN0IGw9L1sjMCxdKlsjMF0oPzpcXC4wKiMqKT8vO2Z1bmN0aW9uIG8oZSx0LG4pe2NvbnN0IHI9KG49bnx8e30pLmN1c3RvbXMuZ3JvdXAscz1uLmN1c3RvbXMuZGVjaW1hbCxvPXQuc3BsaXQoXCI7XCIpLGM9b1swXTtpZigodD1vW2U8MD8xOjBdfHxcIi1cIitjKS5pbmNsdWRlcyhcIiVcIikpZSo9MTAwO2Vsc2UgaWYodC5pbmNsdWRlcyhcIuKAsFwiKSllKj0xZTM7ZWxzZXtpZih0LmluY2x1ZGVzKFwiwqRcIikpdGhyb3cgbmV3IEVycm9yKFwiY3VycmVuY3kgbm90YXRpb24gbm90IHN1cHBvcnRlZFwiKTtpZih0LmluY2x1ZGVzKFwiRVwiKSl0aHJvdyBuZXcgRXJyb3IoXCJleHBvbmVudGlhbCBub3RhdGlvbiBub3Qgc3VwcG9ydGVkXCIpfWNvbnN0IGE9bCxwPWMubWF0Y2goYSk7aWYoIXApdGhyb3cgbmV3IEVycm9yKFwidW5hYmxlIHRvIGZpbmQgYSBudW1iZXIgZXhwcmVzc2lvbiBpbiBwYXR0ZXJuOiBcIit0KTtyZXR1cm4hMT09PW4uZnJhY3Rpb25hbCYmKG4ucGxhY2VzPTApLHQucmVwbGFjZShhLGkoZSxwWzBdLHtkZWNpbWFsOnMsZ3JvdXA6cixwbGFjZXM6bi5wbGFjZXMscm91bmQ6bi5yb3VuZH0pKX1mdW5jdGlvbiBpKGUsdCxuKXshMD09PShuPW58fHt9KS5wbGFjZXMmJihuLnBsYWNlcz0wKSxuLnBsYWNlcz09PTEvMCYmKG4ucGxhY2VzPTYpO2NvbnN0IHI9dC5zcGxpdChcIi5cIikscz1cInN0cmluZ1wiPT10eXBlb2Ygbi5wbGFjZXMmJm4ucGxhY2VzLmluZGV4T2YoXCIsXCIpO2xldCBsPW4ucGxhY2VzO3M/bD1uLnBsYWNlcy5zdWJzdHJpbmcocysxKTorbD49MHx8KGw9KHJbMV18fFtdKS5sZW5ndGgpLG4ucm91bmQ8MHx8KGU9TnVtYmVyKGUudG9GaXhlZChOdW1iZXIobCkpKSk7Y29uc3Qgbz1TdHJpbmcoTWF0aC5hYnMoZSkpLnNwbGl0KFwiLlwiKSxpPW9bMV18fFwiXCI7aWYoclsxXXx8bi5wbGFjZXMpe3MmJihuLnBsYWNlcz1uLnBsYWNlcy5zdWJzdHJpbmcoMCxzKSk7Y29uc3QgZT12b2lkIDAhPT1uLnBsYWNlcz9uLnBsYWNlczpyWzFdJiZyWzFdLmxhc3RJbmRleE9mKFwiMFwiKSsxOytlPmkubGVuZ3RoJiYob1sxXT1pLnBhZEVuZChOdW1iZXIoZSksXCIwXCIpKSwrbDxpLmxlbmd0aCYmKG9bMV09aS5zdWJzdHIoMCxOdW1iZXIobCkpKX1lbHNlIG9bMV0mJm8ucG9wKCk7Y29uc3QgYz1yWzBdLnJlcGxhY2UoXCIsXCIsXCJcIik7bGV0IGE9Yy5pbmRleE9mKFwiMFwiKTstMSE9PWEmJihhPWMubGVuZ3RoLWEsYT5vWzBdLmxlbmd0aCYmKG9bMF09b1swXS5wYWRTdGFydChhLFwiMFwiKSksYy5pbmNsdWRlcyhcIiNcIil8fChvWzBdPW9bMF0uc3Vic3RyKG9bMF0ubGVuZ3RoLWEpKSk7bGV0IHAsdSxkPXJbMF0ubGFzdEluZGV4T2YoXCIsXCIpO2lmKC0xIT09ZCl7cD1yWzBdLmxlbmd0aC1kLTE7Y29uc3QgZT1yWzBdLnN1YnN0cigwLGQpO2Q9ZS5sYXN0SW5kZXhPZihcIixcIiksLTEhPT1kJiYodT1lLmxlbmd0aC1kLTEpfWNvbnN0IGc9W107Zm9yKGxldCBmPW9bMF07Zjspe2NvbnN0IGU9Zi5sZW5ndGgtcDtnLnB1c2goZT4wP2Yuc3Vic3RyKGUpOmYpLGY9ZT4wP2Yuc2xpY2UoMCxlKTpcIlwiLHUmJihwPXUsdT12b2lkIDApfXJldHVybiBvWzBdPWcucmV2ZXJzZSgpLmpvaW4obi5ncm91cHx8XCIsXCIpLG8uam9pbihuLmRlY2ltYWx8fFwiLlwiKX1mdW5jdGlvbiBjKGUpe3JldHVybiBhKGUpLnJlZ2V4cH1mdW5jdGlvbiBhKHQpe2NvbnN0IG49cigodD10fHx7fSkubG9jYWxlKSxzPXQucGF0dGVybnx8bi5wYXR0ZXJuLG89bi5ncm91cCxpPW4uZGVjaW1hbDtsZXQgYz0xO2lmKHMuaW5jbHVkZXMoXCIlXCIpKWMvPTEwMDtlbHNlIGlmKHMuaW5jbHVkZXMoXCLigLBcIikpYy89MWUzO2Vsc2UgaWYocy5pbmNsdWRlcyhcIsKkXCIpKXRocm93IG5ldyBFcnJvcihcImN1cnJlbmN5IG5vdGF0aW9uIG5vdCBzdXBwb3J0ZWRcIik7Y29uc3QgYT1zLnNwbGl0KFwiO1wiKTsxPT09YS5sZW5ndGgmJmEucHVzaChcIi1cIithWzBdKTtjb25zdCBwPWcoYSwobj0+KG49XCIoPzpcIitlKG4sXCIuXCIpK1wiKVwiKS5yZXBsYWNlKGwsKGU9Pntjb25zdCBuPXtzaWduZWQ6ITEsc2VwYXJhdG9yOnQuc3RyaWN0P286W28sXCJcIl0sZnJhY3Rpb25hbDp0LmZyYWN0aW9uYWwsZGVjaW1hbDppLGV4cG9uZW50OiExfSxyPWUuc3BsaXQoXCIuXCIpO2xldCBzPXQucGxhY2VzOzE9PT1yLmxlbmd0aCYmMSE9PWMmJihyWzFdPVwiIyMjXCIpLDE9PT1yLmxlbmd0aHx8MD09PXM/bi5mcmFjdGlvbmFsPSExOih2b2lkIDA9PT1zJiYocz10LnBhdHRlcm4/clsxXS5sYXN0SW5kZXhPZihcIjBcIikrMToxLzApLHMmJm51bGw9PXQuZnJhY3Rpb25hbCYmKG4uZnJhY3Rpb25hbD0hMCksIXQucGxhY2VzJiYrczxyWzFdLmxlbmd0aCYmKHMrPVwiLFwiK3JbMV0ubGVuZ3RoKSxuLnBsYWNlcz1zKTtjb25zdCBsPXJbMF0uc3BsaXQoXCIsXCIpO3JldHVybiBsLmxlbmd0aD4xJiYobi5ncm91cFNpemU9bC5wb3AoKS5sZW5ndGgsbC5sZW5ndGg+MSYmKG4uZ3JvdXBTaXplMj1sLnBvcCgpLmxlbmd0aCkpLFwiKFwiK3UobikrXCIpXCJ9KSkpLCEwKTtyZXR1cm57cmVnZXhwOnAucmVwbGFjZUFsbCgvW1xceGEwIF0vZyxcIltcXFxcc1xcXFx4YTBdXCIpLGdyb3VwOm8sZGVjaW1hbDppLGZhY3RvcjpjfX1mdW5jdGlvbiBwKGUsdCl7Y29uc3Qgbj1hKHQpLHI9bmV3IFJlZ0V4cChcIl5cIituLnJlZ2V4cCtcIiRcIikuZXhlYyhlKTtpZighcilyZXR1cm4gTmFOO2xldCBzPXJbMV07aWYoIXJbMV0pe2lmKCFyWzJdKXJldHVybiBOYU47cz1yWzJdLG4uZmFjdG9yKj0tMX1yZXR1cm4gcz1zLnJlcGxhY2VBbGwobmV3IFJlZ0V4cChcIltcIituLmdyb3VwK1wiXFxcXHNcXFxceGEwXVwiLFwiZ1wiKSxcIlwiKS5yZXBsYWNlKG4uZGVjaW1hbCxcIi5cIiksTnVtYmVyKHMpKm4uZmFjdG9yfWZ1bmN0aW9uIHUoZSl7XCJwbGFjZXNcImluKGU9ZXx8e30pfHwoZS5wbGFjZXM9MS8wKSxcInN0cmluZ1wiIT10eXBlb2YgZS5kZWNpbWFsJiYoZS5kZWNpbWFsPVwiLlwiKSxcImZyYWN0aW9uYWxcImluIGUmJiEvXjAvLnRlc3QoU3RyaW5nKGUucGxhY2VzKSl8fChlLmZyYWN0aW9uYWw9WyEwLCExXSksXCJleHBvbmVudFwiaW4gZXx8KGUuZXhwb25lbnQ9WyEwLCExXSksXCJlU2lnbmVkXCJpbiBlfHwoZS5lU2lnbmVkPVshMCwhMV0pO2NvbnN0IHQ9ZChlKSxuPWcoZS5mcmFjdGlvbmFsLCh0PT57bGV0IG49XCJcIjtyZXR1cm4gdCYmMCE9PWUucGxhY2VzJiYobj1cIlxcXFxcIitlLmRlY2ltYWwsZS5wbGFjZXM9PT0xLzA/bj1cIig/OlwiK24rXCJcXFxcZCspP1wiOm4rPVwiXFxcXGR7XCIrZS5wbGFjZXMrXCJ9XCIpLG59KSwhMCk7bGV0IHI9dCtuO3JldHVybiBuJiYocj1cIig/Oig/OlwiK3IrXCIpfCg/OlwiK24rXCIpKVwiKSxyK2coZS5leHBvbmVudCwodD0+dD9cIihbZUVdXCIrZCh7c2lnbmVkOmUuZVNpZ25lZH0pK1wiKVwiOlwiXCIpKX1mdW5jdGlvbiBkKHQpe1wic2lnbmVkXCJpbih0PXR8fHt9KXx8KHQuc2lnbmVkPVshMCwhMV0pLFwic2VwYXJhdG9yXCJpbiB0P1wiZ3JvdXBTaXplXCJpbiB0fHwodC5ncm91cFNpemU9Myk6dC5zZXBhcmF0b3I9XCJcIjtyZXR1cm4gZyh0LnNpZ25lZCwoZT0+ZT9cIlstK11cIjpcIlwiKSwhMCkrZyh0LnNlcGFyYXRvciwobj0+e2lmKCFuKXJldHVyblwiKD86XFxcXGQrKVwiO1wiIFwiPT09KG49ZShuKSk/bj1cIlxcXFxzXCI6XCLCoFwiPT09biYmKG49XCJcXFxcc1xcXFx4YTBcIik7Y29uc3Qgcj10Lmdyb3VwU2l6ZSxzPXQuZ3JvdXBTaXplMjtpZihzKXtjb25zdCBlPVwiKD86MHxbMS05XVxcXFxkezAsXCIrKHMtMSkrXCJ9KD86W1wiK24rXCJdXFxcXGR7XCIrcytcIn0pKltcIituK1wiXVxcXFxke1wiK3IrXCJ9KVwiO3JldHVybiByLXM+MD9cIig/OlwiK2UrXCJ8KD86MHxbMS05XVxcXFxkezAsXCIrKHItMSkrXCJ9KSlcIjplfXJldHVyblwiKD86MHxbMS05XVxcXFxkezAsXCIrKHItMSkrXCJ9KD86W1wiK24rXCJdXFxcXGR7XCIrcitcIn0pKilcIn0pLCEwKX1jb25zdCBnPShlLHQsbik9PntpZighKGUgaW5zdGFuY2VvZiBBcnJheSkpcmV0dXJuIHQoZSk7Y29uc3Qgcj1bXTtmb3IobGV0IHM9MDtzPGUubGVuZ3RoO3MrKylyLnB1c2godChlW3NdKSk7cmV0dXJuIGYoci5qb2luKFwifFwiKSxCb29sZWFuKG4pKX0sZj0oZSx0KT0+XCIoXCIrKHQ/XCI/OlwiOlwiXCIpK2UrXCIpXCI7ZXhwb3J0e2EgYXMgX3BhcnNlSW5mbyxzIGFzIGZvcm1hdCxyIGFzIGdldEN1c3RvbXMscCBhcyBwYXJzZSxjIGFzIHJlZ2V4cH07XG4iLCIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yNy9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0e19wYXJzZUluZm8gYXMgZX1mcm9tXCIuLi8uLi8uLi8uLi9jb3JlL251bWJlci5qc1wiO2ltcG9ydHtub3JtYWxpemVGaWVsZE5hbWUgYXMgdH1mcm9tXCIuLi8uLi8uLi9zdXBwb3J0L2ZpZWxkVXRpbHMuanNcIjtjb25zdCBuPS9eXFxzKlwiKFtcXFNcXHNdKilcIlxccyokLyxpPS9cIlwiL2cscj1cIlxcblwiLGw9W1wiLFwiLFwiIFwiLFwiO1wiLFwifFwiLFwiXFx0XCJdO2Z1bmN0aW9uKm8oZSx0LG4pe2xldCBpPTA7Zm9yKDtpPD1lLmxlbmd0aDspe2NvbnN0IHI9ZS5pbmRleE9mKHQsaSksbD1lLnN1YnN0cmluZyhpLHI+LTE/cjp2b2lkIDApO2krPWwubGVuZ3RoK3QubGVuZ3RoLG4mJiFsLnRyaW0oKXx8KHlpZWxkIGwpfX1mdW5jdGlvbiBzKGUpe2NvbnN0IHQ9ZS5pbmNsdWRlcyhcIlxcclxcblwiKT9cIlxcclxcblwiOnI7cmV0dXJuIG8oZSx0LCEwKX1mdW5jdGlvbiB1KGUsdCl7cmV0dXJuIG8oZSx0LCExKX1mdW5jdGlvbiBjKGUsdCxuKXtlPWUudHJpbSgpLHQ9dD8udHJpbSgpO2NvbnN0IGk9W10scj1BcnJheS5mcm9tKG5ldyBTZXQoW24/LmRlbGltaXRlciwuLi5sXSkpLmZpbHRlcigoZT0+bnVsbCE9ZSkpO2Zvcihjb25zdCBsIG9mIHIpe2NvbnN0IG49ZChlLGwpLmxlbmd0aCxyPWQodCxsKS5sZW5ndGg/P247bj4xJiZpLnB1c2goe3dlaWdodDpNYXRoLm1pbihuLHIpLGRlbGltaXRlcjpsfSl9Y29uc3Qgbz1pLnNvcnQoKCh7d2VpZ2h0OmV9LHt3ZWlnaHQ6dH0pPT50LWUpKS5tYXAoKCh7ZGVsaW1pdGVyOmV9KT0+ZSkpO2Zvcihjb25zdCBsIG9mIG8pe2NvbnN0IHQ9bShmKGUsbCkubmFtZXMsbj8ubG9uZ2l0dWRlRmllbGQsbj8ubGF0aXR1ZGVGaWVsZCk7aWYodC5sb25naXR1ZGVGaWVsZE5hbWUmJnQubGF0aXR1ZGVGaWVsZE5hbWUpcmV0dXJue2RlbGltaXRlcjpsLGxvY2F0aW9uSW5mbzp0fX1yZXR1cm57ZGVsaW1pdGVyOm9bMF0sbG9jYXRpb25JbmZvOm51bGx9fWZ1bmN0aW9uKmEoZSx0LGwsbz0oKCk9Pk9iamVjdC5jcmVhdGUobnVsbCkpKXtjb25zdCBjPXMoZSk7Yy5uZXh0KCk7bGV0IGE9XCJcIixmPVwiXCIsZD0wLG09bygpLHA9MDtlOmZvcihjb25zdCBzIG9mIGMpe2NvbnN0IGU9dShzLGwpO2Zvcihjb25zdCByIG9mIGUpaWYoYSs9ZityLGY9XCJcIixkKz1nKHIpLGQlMj09MCl7aWYoZD4wKXtjb25zdCBlPW4uZXhlYyhhKTtpZighZSl7bT1vKCkscD0wLGE9XCJcIixkPTA7Y29udGludWUgZX1tW3RbcF1dPWVbMV0ucmVwbGFjZUFsbChpLCdcIicpLHArK31lbHNlIG1bdFtwXV09YSxwKys7YT1cIlwiLGQ9MH1lbHNlIGY9bDswPT09ZD8oeWllbGQgbSxtPW8oKSxwPTApOmY9cn19ZnVuY3Rpb24gZihlLG4pe2NvbnN0IGk9ZChlLG4pLmZpbHRlcigoZT0+bnVsbCE9ZSkpLHI9aS5tYXAoKGU9PnQoZSkpKTtmb3IobGV0IHQ9ci5sZW5ndGgtMTt0Pj0wO3QtLSlyW3RdfHwoci5zcGxpY2UodCwxKSxpLnNwbGljZSh0LDEpKTtyZXR1cm57bmFtZXM6cixhbGlhc2VzOml9fWZ1bmN0aW9uIGQoZSx0KXtpZighZT8ubGVuZ3RoKXJldHVybltdO2NvbnN0IHI9W107bGV0IGw9XCJcIixvPVwiXCIscz0wO2NvbnN0IGM9dShlLHQpO2Zvcihjb25zdCB1IG9mIGMpaWYobCs9byt1LG89XCJcIixzKz1nKHUpLHMlMj09MCl7aWYocz4wKXtjb25zdCBlPW4uZXhlYyhsKTtlJiZyLnB1c2goZVsxXS5yZXBsYWNlQWxsKGksJ1wiJykpfWVsc2Ugci5wdXNoKGwpO2w9XCJcIixzPTB9ZWxzZSBvPXQ7cmV0dXJuIHJ9ZnVuY3Rpb24gZyhlKXtsZXQgdD0wLG49MDtmb3Iobj1lLmluZGV4T2YoJ1wiJyxuKTtuPj0wOyl0Kyssbj1lLmluZGV4T2YoJ1wiJyxuKzEpO3JldHVybiB0fWZ1bmN0aW9uIG0oZSxuLGkpe249dChuKT8udG9Mb3dlckNhc2UoKSxpPXQoaSk/LnRvTG93ZXJDYXNlKCk7Y29uc3Qgcj1lLm1hcCgoZT0+ZS50b0xvd2VyQ2FzZSgpKSksbD1uP2Vbci5pbmRleE9mKG4pXTpudWxsLG89aT9lW3IuaW5kZXhPZihpKV06bnVsbDtyZXR1cm57bG9uZ2l0dWRlRmllbGROYW1lOmx8fGVbci5pbmRleE9mKHcuZmluZCgoZT0+ci5pbmNsdWRlcyhlKSkpKV0sbGF0aXR1ZGVGaWVsZE5hbWU6b3x8ZVtyLmluZGV4T2YoRi5maW5kKChlPT5yLmluY2x1ZGVzKGUpKSkpXX19ZnVuY3Rpb24gcChlLHQsbixpLHIpe2NvbnN0IGw9W10sbz1hKGUsbix0KSxzPVtdO2Zvcihjb25zdCB1IG9mIG8pe2lmKDEwPT09cy5sZW5ndGgpYnJlYWs7cy5wdXNoKHUpfWZvcihsZXQgdT0wO3U8bi5sZW5ndGg7dSsrKXtjb25zdCBlPW5bdV0sdD1pW3VdO2lmKGU9PT1yLmxvbmdpdHVkZUZpZWxkTmFtZXx8ZT09PXIubGF0aXR1ZGVGaWVsZE5hbWUpbC5wdXNoKHtuYW1lOmUsdHlwZTpcImVzcmlGaWVsZFR5cGVEb3VibGVcIixhbGlhczp0fSk7ZWxzZXtsZXQgbixpO3N3aXRjaChiKHMubWFwKCh0PT50W2VdKSkpKXtjYXNlXCJpbnRlZ2VyXCI6bj1cImVzcmlGaWVsZFR5cGVJbnRlZ2VyXCI7YnJlYWs7Y2FzZVwiZG91YmxlXCI6bj1cImVzcmlGaWVsZFR5cGVEb3VibGVcIjticmVhaztjYXNlXCJkYXRlXCI6bj1cImVzcmlGaWVsZFR5cGVEYXRlXCIsaT0zNjticmVhaztkZWZhdWx0Om49XCJlc3JpRmllbGRUeXBlU3RyaW5nXCIsaT0yNTV9bC5wdXNoKHtuYW1lOmUsdHlwZTpuLGFsaWFzOnQsbGVuZ3RoOml9KX19cmV0dXJuIGx9ZnVuY3Rpb24gYihlKXtpZighZS5sZW5ndGgpcmV0dXJuXCJzdHJpbmdcIjtjb25zdCB0PS9bXistLiwwLTldLztyZXR1cm4gZS5tYXAoKGU9PntsZXQgbj0hMTtpZihcIlwiIT09ZSl7aWYodC50ZXN0KGUpKW49ITA7ZWxzZXtsZXQgdD1OKGUpO2lmKCFpc05hTih0KSlyZXR1cm4vWy4sXS8udGVzdChlKXx8IU51bWJlci5pc0ludGVnZXIodCl8fHQ+MjE0NzgzNjQ3fHx0PC0yMTQ3ODM2NDg/XCJkb3VibGVcIjpcImludGVnZXJcIjtpZihlLmluY2x1ZGVzKFwiRVwiKSl7aWYodD1OdW1iZXIoZSksIWlzTmFOKHQpKXJldHVyblwiZG91YmxlXCI7aWYoZS5pbmNsdWRlcyhcIixcIikpe2lmKGU9ZS5yZXBsYWNlKFwiLFwiLFwiLlwiKSx0PU51bWJlcihlKSwhaXNOYU4odCkpcmV0dXJuXCJkb3VibGVcIjtuPSEwfWVsc2Ugbj0hMH1lbHNlIG49ITB9aWYobil7aWYoIS9eWy1dP1xcZCpbLixdP1xcZCokLy50ZXN0KGUpKXtyZXR1cm4gaChuZXcgRGF0ZShlKSxlKT9cImRhdGVcIjpcInN0cmluZ1wifXJldHVyblwic3RyaW5nXCJ9cmV0dXJuXCJzdHJpbmdcIn19KSkucmVkdWNlKCgoZSx0KT0+dm9pZCAwPT09ZT90OnZvaWQgMD09PXQ/ZTplPT09dD90Olwic3RyaW5nXCI9PT1lfHxcInN0cmluZ1wiPT09dD9cInN0cmluZ1wiOlwiZG91YmxlXCI9PT1lfHxcImRvdWJsZVwiPT09dD9cImRvdWJsZVwiOnZvaWQgMCkpfWZ1bmN0aW9uIGgoZSx0KXtpZighZXx8XCJbb2JqZWN0IERhdGVdXCIhPT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSl8fGlzTmFOKGUuZ2V0VGltZSgpKSlyZXR1cm4hMTtsZXQgbj0hMDtpZigheSYmL1xcZCtcXFcqJC8udGVzdCh0KSl7Y29uc3QgZT10Lm1hdGNoKC9bYS16QS1aXXsyLH0vKTtpZihlKXtsZXQgdD0hMSxpPTA7Zm9yKDshdCYmaTw9ZS5sZW5ndGg7KXQ9IXgudGVzdChlW2ldKSxpKys7bj0hdH19cmV0dXJuIG59Y29uc3QgTj1mdW5jdGlvbigpe2NvbnN0IHQ9ZSgpLG49bmV3IFJlZ0V4cChcIl5cIit0LnJlZ2V4cCtcIiRcIiksaT1uZXcgUmVnRXhwKFwiW1wiK3QuZ3JvdXArXCJcXFxcc1xcXFx4YTBdXCIsXCJnXCIpLHI9dC5mYWN0b3I7cmV0dXJuIGU9Pntjb25zdCBsPW4uZXhlYyhlKTtpZih0LmZhY3Rvcj1yLCFsKXJldHVybiBOYU47bGV0IG89bFsxXTtpZighbFsxXSl7aWYoIWxbMl0pcmV0dXJuIE5hTjtvPWxbMl0sdC5mYWN0b3IqPS0xfXJldHVybiBvPW8ucmVwbGFjZShpLFwiXCIpLnJlcGxhY2UodC5kZWNpbWFsLFwiLlwiKSwrbyp0LmZhY3Rvcn19KCkseD0vXigoamFuKHVhcnkpPyl8KGZlYihydWFyeSk/KXwobWFyKGNoKT8pfChhcHIoaWwpPyl8KG1heSl8KGp1bihlKT8pfChqdWwoeSk/KXwoYXVnKHVzdCk/KXwoc2VwKHRlbWJlcik/KXwob2N0KG9iZXIpPyl8KG5vdihlbWJlcik/KXwoZGVjKGVtYmVyKT8pfChhbSl8KHBtKXwoZ210KXwodXRjKSkkL2kseT1OdW1iZXIuaXNOYU4obmV3IERhdGUoXCJ0ZWNobm9sb2d5IDEwXCIpLmdldFRpbWUoKSksRj1bXCJsYXRcIixcImxhdGl0dWRlXCIsXCJsYXRpdHVkZTgzXCIsXCJsYXRkZWNkZWdcIixcImxhdF9kZFwiLFwieVwiLFwieWNlbnRlclwiLFwicG9pbnRfeVwiXSx3PVtcImxvblwiLFwibG5nXCIsXCJsb25nXCIsXCJsb25naXR1ZGVcIixcImxvbmdpdHVkZTgzXCIsXCJsb25nZGVjZGVnXCIsXCJsb25nX2RkXCIsXCJ4XCIsXCJ4Y2VudGVyXCIsXCJwb2ludF94XCJdO2V4cG9ydHtmIGFzIGV4dHJhY3RGaWVsZE5hbWVzQW5kQWxpYXNlc0Zyb21Sb3csYyBhcyBpbmZlckRlbGltaXRlckFuZExvY2F0aW9uSW5mbyxiIGFzIGluZmVyRmllbGRUeXBlLHAgYXMgaW5mZXJGaWVsZHMsaCBhcyBpc1ZhbGlkRGF0ZSxOIGFzIHBhcnNlTnVtYmVyLGEgYXMgcGFyc2VSb3dzLHUgYXMgcmVhZFJvd1BhcnRzLHMgYXMgcmVhZFJvd3MsZCBhcyBzcGxpdFNpbmdsZVJvd307XG4iLCIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yNy9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0XCIuLi8uLi8uLi8uLi9nZW9tZXRyeS5qc1wiO2ltcG9ydCBlIGZyb21cIi4uLy4uLy4uLy4uL3JlcXVlc3QuanNcIjtpbXBvcnR7Y3JlYXRlVGFzayBhcyB0fWZyb21cIi4uLy4uLy4uLy4uL2NvcmUvYXN5bmNVdGlscy5qc1wiO2ltcG9ydCBpIGZyb21cIi4uLy4uLy4uLy4uL2NvcmUvRXJyb3IuanNcIjtpbXBvcnQgbiBmcm9tXCIuLi8uLi8uLi8uLi9jb3JlL0xvZ2dlci5qc1wiO2ltcG9ydHtpc0Fib3J0RXJyb3IgYXMgcn1mcm9tXCIuLi8uLi8uLi8uLi9jb3JlL3Byb21pc2VVdGlscy5qc1wiO2ltcG9ydHt1cmxUb09iamVjdCBhcyBzLGdldEZpbGVuYW1lIGFzIG99ZnJvbVwiLi4vLi4vLi4vLi4vY29yZS91cmxVdGlscy5qc1wiO2ltcG9ydHtwcm9qZWN0TWFueSBhcyBhfWZyb21cIi4uLy4uLy4uLy4uL2dlb21ldHJ5L3Byb2plY3Rpb24uanNcIjtpbXBvcnR7anNvbkFkYXB0ZXIgYXMgbH1mcm9tXCIuLi8uLi8uLi8uLi9nZW9tZXRyeS9nZW9tZXRyeUFkYXB0ZXJzL2pzb24uanNcIjtpbXBvcnR7ZXF1YWxzIGFzIGMsaXNXZWJNZXJjYXRvciBhcyBtLFdHUzg0IGFzIGR9ZnJvbVwiLi4vLi4vLi4vLi4vZ2VvbWV0cnkvc3VwcG9ydC9zcGF0aWFsUmVmZXJlbmNlVXRpbHMuanNcIjtpbXBvcnR7bG5nTGF0VG9YWSBhcyB1fWZyb21cIi4uLy4uLy4uLy4uL2dlb21ldHJ5L3N1cHBvcnQvd2ViTWVyY2F0b3JVdGlscy5qc1wiO2ltcG9ydHtPcHRpbWl6ZWRGZWF0dXJlIGFzIHB9ZnJvbVwiLi4vLi4vT3B0aW1pemVkRmVhdHVyZS5qc1wiO2ltcG9ydCBmIGZyb21cIi4uLy4uL09wdGltaXplZEdlb21ldHJ5LmpzXCI7aW1wb3J0IHkgZnJvbVwiLi4vLi4vZGF0YS9GZWF0dXJlU3RvcmUuanNcIjtpbXBvcnR7Y2hlY2tQcm9qZWN0aW9uU3VwcG9ydCBhcyBofWZyb21cIi4uLy4uL2RhdGEvcHJvamVjdGlvblN1cHBvcnQuanNcIjtpbXBvcnR7UXVlcnlFbmdpbmUgYXMgZ31mcm9tXCIuLi8uLi9kYXRhL1F1ZXJ5RW5naW5lLmpzXCI7aW1wb3J0e3BhcnNlUm93cyBhcyBfLGlzVmFsaWREYXRlIGFzIEkscGFyc2VOdW1iZXIgYXMgRixyZWFkUm93cyBhcyB3LGluZmVyRGVsaW1pdGVyQW5kTG9jYXRpb25JbmZvIGFzIEUsZXh0cmFjdEZpZWxkTmFtZXNBbmRBbGlhc2VzRnJvbVJvdyBhcyBULGluZmVyRmllbGRzIGFzIGp9ZnJvbVwiLi4vY3N2L2Nzdi5qc1wiO2ltcG9ydHtjcmVhdGVEZWZhdWx0QXR0cmlidXRlc0Z1bmN0aW9uIGFzIHgsY3JlYXRlRHJhd2luZ0luZm8gYXMgTn1mcm9tXCIuL2NsaWVudFNpZGVEZWZhdWx0cy5qc1wiO2ltcG9ydCBTIGZyb21cIi4uLy4uLy4uL3N1cHBvcnQvRmllbGRzSW5kZXguanNcIjtpbXBvcnR7Z2V0RmllbGREZWZhdWx0VmFsdWUgYXMgcX1mcm9tXCIuLi8uLi8uLi9zdXBwb3J0L2ZpZWxkVXRpbHMuanNcIjtpbXBvcnQgYiBmcm9tXCIuLi8uLi8uLi8uLi9nZW9tZXRyeS9TcGF0aWFsUmVmZXJlbmNlLmpzXCI7Y29uc3QgQz1OKFwiZXNyaUdlb21ldHJ5UG9pbnRcIiksdj1bXCJjc3ZcIl0sTz1bMCwwXTtjbGFzcyBEe2NvbnN0cnVjdG9yKGUsdCl7dGhpcy54PWUsdGhpcy55PXR9fWNsYXNzIGt7Y29uc3RydWN0b3IoKXt0aGlzLl9xdWVyeUVuZ2luZT1udWxsLHRoaXMuX3NuYXBzaG90RmVhdHVyZXM9YXN5bmMgZT0+e2NvbnN0IHQ9YXdhaXQgdGhpcy5fZmV0Y2goZSk7cmV0dXJuIHRoaXMuX2NyZWF0ZUZlYXR1cmVzKHQpfX1kZXN0cm95KCl7dGhpcy5fcXVlcnlFbmdpbmU/LmRlc3Ryb3koKSx0aGlzLl9xdWVyeUVuZ2luZT1udWxsfWFzeW5jIGxvYWQoZSx0PXt9KXt0aGlzLl9sb2FkT3B0aW9ucz1lO2NvbnN0W2ldPWF3YWl0IFByb21pc2UuYWxsKFt0aGlzLl9mZXRjaCh0LnNpZ25hbCksdGhpcy5fY2hlY2tQcm9qZWN0aW9uKGU/LnBhcnNpbmdPcHRpb25zPy5zcGF0aWFsUmVmZXJlbmNlKV0pLG49UChpLGUpO3RoaXMuX2xvY2F0aW9uSW5mbz1uLmxvY2F0aW9uSW5mbyx0aGlzLl9kZWxpbWl0ZXI9bi5kZWxpbWl0ZXIsdGhpcy5fcXVlcnlFbmdpbmU9dGhpcy5fY3JlYXRlUXVlcnlFbmdpbmUobik7Y29uc3Qgcj1hd2FpdCB0aGlzLl9jcmVhdGVGZWF0dXJlcyhpKTt0aGlzLl9xdWVyeUVuZ2luZS5mZWF0dXJlU3RvcmUuYWRkTWFueShyKTtjb25zdHtmdWxsRXh0ZW50OnMsdGltZUV4dGVudDpvfT1hd2FpdCB0aGlzLl9xdWVyeUVuZ2luZS5mZXRjaFJlY29tcHV0ZWRFeHRlbnRzKCk7aWYobi5sYXllckRlZmluaXRpb24uZXh0ZW50PXMsbyl7Y29uc3R7c3RhcnQ6ZSxlbmQ6dH09bztuLmxheWVyRGVmaW5pdGlvbi50aW1lSW5mby50aW1lRXh0ZW50PVtlLHRdfXJldHVybiBufWFzeW5jIGFwcGx5RWRpdHMoKXt0aHJvdyBuZXcgaShcImNzdi1sYXllcjplZGl0aW5nLW5vdC1zdXBwb3J0ZWRcIixcImFwcGx5RWRpdHMoKSBpcyBub3Qgc3VwcG9ydGVkIG9uIENTVkxheWVyXCIpfWFzeW5jIHF1ZXJ5RmVhdHVyZXMoZT17fSx0PXt9KXtyZXR1cm4gYXdhaXQgdGhpcy5fd2FpdFNuYXBzaG90Q29tcGxldGUoKSx0aGlzLl9xdWVyeUVuZ2luZS5leGVjdXRlUXVlcnkoZSx0LnNpZ25hbCl9YXN5bmMgcXVlcnlGZWF0dXJlQ291bnQoZT17fSx0PXt9KXtyZXR1cm4gYXdhaXQgdGhpcy5fd2FpdFNuYXBzaG90Q29tcGxldGUoKSx0aGlzLl9xdWVyeUVuZ2luZS5leGVjdXRlUXVlcnlGb3JDb3VudChlLHQuc2lnbmFsKX1hc3luYyBxdWVyeU9iamVjdElkcyhlPXt9LHQ9e30pe3JldHVybiBhd2FpdCB0aGlzLl93YWl0U25hcHNob3RDb21wbGV0ZSgpLHRoaXMuX3F1ZXJ5RW5naW5lLmV4ZWN1dGVRdWVyeUZvcklkcyhlLHQuc2lnbmFsKX1hc3luYyBxdWVyeUV4dGVudChlPXt9LHQ9e30pe3JldHVybiBhd2FpdCB0aGlzLl93YWl0U25hcHNob3RDb21wbGV0ZSgpLHRoaXMuX3F1ZXJ5RW5naW5lLmV4ZWN1dGVRdWVyeUZvckV4dGVudChlLHQuc2lnbmFsKX1hc3luYyBxdWVyeVNuYXBwaW5nKGUsdD17fSl7cmV0dXJuIGF3YWl0IHRoaXMuX3dhaXRTbmFwc2hvdENvbXBsZXRlKCksdGhpcy5fcXVlcnlFbmdpbmUuZXhlY3V0ZVF1ZXJ5Rm9yU25hcHBpbmcoZSx0LnNpZ25hbCl9YXN5bmMgcmVmcmVzaChlKXt0aGlzLl9sb2FkT3B0aW9ucy5jdXN0b21QYXJhbWV0ZXJzPWUsdGhpcy5fc25hcHNob3RUYXNrPy5hYm9ydCgpLHRoaXMuX3NuYXBzaG90VGFzaz10KHRoaXMuX3NuYXBzaG90RmVhdHVyZXMpLHRoaXMuX3NuYXBzaG90VGFzay5wcm9taXNlLnRoZW4oKGU9Pnt0aGlzLl9xdWVyeUVuZ2luZS5mZWF0dXJlU3RvcmUuY2xlYXIoKSxlJiZ0aGlzLl9xdWVyeUVuZ2luZS5mZWF0dXJlU3RvcmUuYWRkTWFueShlKX0pLChlPT57dGhpcy5fcXVlcnlFbmdpbmUuZmVhdHVyZVN0b3JlLmNsZWFyKCkscihlKXx8bi5nZXRMb2dnZXIoXCJlc3JpLmxheWVycy5DU1ZMYXllclwiKS5lcnJvcihuZXcgaShcImNzdi1sYXllcjpyZWZyZXNoXCIsXCJBbiBlcnJvciBvY2N1cnJlZCBkdXJpbmcgcmVmcmVzaFwiLHtlcnJvcjplfSkpfSkpLGF3YWl0IHRoaXMuX3dhaXRTbmFwc2hvdENvbXBsZXRlKCk7Y29uc3R7ZnVsbEV4dGVudDpzLHRpbWVFeHRlbnQ6b309YXdhaXQgdGhpcy5fcXVlcnlFbmdpbmUuZmV0Y2hSZWNvbXB1dGVkRXh0ZW50cygpO3JldHVybntleHRlbnQ6cyx0aW1lRXh0ZW50Om99fWFzeW5jIF93YWl0U25hcHNob3RDb21wbGV0ZSgpe2lmKHRoaXMuX3NuYXBzaG90VGFzayYmIXRoaXMuX3NuYXBzaG90VGFzay5maW5pc2hlZCl7dHJ5e2F3YWl0IHRoaXMuX3NuYXBzaG90VGFzay5wcm9taXNlfWNhdGNoe31yZXR1cm4gdGhpcy5fd2FpdFNuYXBzaG90Q29tcGxldGUoKX19YXN5bmMgX2ZldGNoKHQpe2NvbnN0e3VybDpuLGN1c3RvbVBhcmFtZXRlcnM6cn09dGhpcy5fbG9hZE9wdGlvbnM7aWYoIW4pdGhyb3cgbmV3IGkoXCJjc3YtbGF5ZXI6aW52YWxpZC1zb3VyY2VcIixcInVybCBub3QgZGVmaW5lZFwiKTtjb25zdCBvPXMobik7cmV0dXJuKGF3YWl0IGUoby5wYXRoLHtxdWVyeTp7Li4uby5xdWVyeSwuLi5yfSxyZXNwb25zZVR5cGU6XCJ0ZXh0XCIsc2lnbmFsOnR9KSkuZGF0YX1fY3JlYXRlUXVlcnlFbmdpbmUoZSl7Y29uc3R7b2JqZWN0SWRGaWVsZDp0LGZpZWxkczppLGV4dGVudDpuLHRpbWVJbmZvOnJ9PWUubGF5ZXJEZWZpbml0aW9uLHM9bmV3IHkoe2dlb21ldHJ5VHlwZTpcImVzcmlHZW9tZXRyeVBvaW50XCIsaGFzTTohMSxoYXNaOiExfSk7cmV0dXJuIG5ldyBnKHtmaWVsZHM6aSxnZW9tZXRyeVR5cGU6XCJlc3JpR2VvbWV0cnlQb2ludFwiLGhhc006ITEsaGFzWjohMSx0aW1lSW5mbzpyLG9iamVjdElkRmllbGQ6dCxzcGF0aWFsUmVmZXJlbmNlOm4uc3BhdGlhbFJlZmVyZW5jZXx8e3draWQ6NDMyNn0sY2FjaGVTcGF0aWFsUXVlcmllczohMCxmZWF0dXJlU3RvcmU6c30pfWFzeW5jIF9jcmVhdGVGZWF0dXJlcyhlKXtjb25zdHtsYXRpdHVkZUZpZWxkTmFtZTp0LGxvbmdpdHVkZUZpZWxkTmFtZTppfT10aGlzLl9sb2NhdGlvbkluZm8se29iamVjdElkRmllbGQ6bixmaWVsZHNJbmRleDpyLHNwYXRpYWxSZWZlcmVuY2U6c309dGhpcy5fcXVlcnlFbmdpbmU7bGV0IG89W107Y29uc3QgZD1bXSx5PXIuZmllbGRzLmZpbHRlcigoZT0+ZS5uYW1lIT09bikpLm1hcCgoZT0+ZS5uYW1lKSk7bGV0IGg9MDtjb25zdCBnPXt9O2Zvcihjb25zdCBhIG9mIHIuZmllbGRzKWlmKFwiZXNyaUZpZWxkVHlwZU9JRFwiIT09YS50eXBlJiZcImVzcmlGaWVsZFR5cGVHbG9iYWxJRFwiIT09YS50eXBlKXtjb25zdCBlPXEoYSk7dm9pZCAwIT09ZSYmKGdbYS5uYW1lXT1lKX1jb25zdCB3PV8oZSx5LHRoaXMuX2RlbGltaXRlcix4KGcsbikpO2Zvcihjb25zdCBhIG9mIHcpe2NvbnN0IGU9dGhpcy5fcGFyc2VDb29yZGluYXRlVmFsdWUoYVt0XSkscz10aGlzLl9wYXJzZUNvb3JkaW5hdGVWYWx1ZShhW2ldKTtpZihudWxsIT1zJiZudWxsIT1lJiYhaXNOYU4oZSkmJiFpc05hTihzKSl7YVt0XT1lLGFbaV09cztmb3IoY29uc3QgZSBpbiBhKWlmKGUhPT10JiZlIT09aSlpZihyLmlzRGF0ZUZpZWxkKGUpKXtjb25zdCB0PW5ldyBEYXRlKGFbZV0pO2FbZV09SSh0LGFbZV0pP3QuZ2V0VGltZSgpOm51bGx9ZWxzZSBpZihyLmlzTnVtZXJpY0ZpZWxkKGUpKXtjb25zdCB0PUYoYVtlXSk7aXNOYU4odCk/YVtlXT1udWxsOmFbZV09dH1hW25dPWgsaCsrLG8ucHVzaChuZXcgRChzLGUpKSxkLnB1c2goYSl9fWlmKCFjKHt3a2lkOjQzMjZ9LHMpKWlmKG0ocykpZm9yKGNvbnN0IGEgb2YgbylbYS54LGEueV09dShhLngsYS55LE8pO2Vsc2Ugbz1hKGwsbyxiLldHUzg0LHMsbnVsbCxudWxsKTtjb25zdCBFPVtdO2ZvcihsZXQgYT0wO2E8by5sZW5ndGg7YSsrKXtjb25zdHt4OmUseTp0fT1vW2FdLGk9ZFthXTtpW25dPWErMSxFLnB1c2gobmV3IHAobmV3IGYoW10sW2UsdF0pLGksbnVsbCxpW25dKSl9cmV0dXJuIEV9X3BhcnNlQ29vcmRpbmF0ZVZhbHVlKGUpe2lmKG51bGw9PWV8fFwiXCI9PT1lKXJldHVybiBudWxsO2xldCB0PUYoZSk7cmV0dXJuKGlzTmFOKHQpfHxNYXRoLmFicyh0KT4xODEpJiYodD1wYXJzZUZsb2F0KGUpKSx0fWFzeW5jIF9jaGVja1Byb2plY3Rpb24oZSl7dHJ5e2F3YWl0IGgoZCxlKX1jYXRjaHt0aHJvdyBuZXcgaShcImNzdi1sYXllcjpwcm9qZWN0aW9uLW5vdC1zdXBwb3J0ZWRcIixcIlByb2plY3Rpb24gbm90IHN1cHBvcnRlZFwiKX19fWZ1bmN0aW9uIFAoZSx0KXtjb25zdCBuPXQucGFyc2luZ09wdGlvbnN8fHt9LHI9e2RlbGltaXRlcjpuLmRlbGltaXRlcixsYXllckRlZmluaXRpb246bnVsbCxsb2NhdGlvbkluZm86e2xhdGl0dWRlRmllbGROYW1lOm4ubGF0aXR1ZGVGaWVsZCxsb25naXR1ZGVGaWVsZE5hbWU6bi5sb25naXR1ZGVGaWVsZH19LHM9ci5sYXllckRlZmluaXRpb249e25hbWU6byh0LnVybCx2KXx8XCJjc3ZcIixkcmF3aW5nSW5mbzpDLGdlb21ldHJ5VHlwZTpcImVzcmlHZW9tZXRyeVBvaW50XCIsb2JqZWN0SWRGaWVsZDpudWxsLGZpZWxkczpbXSx0aW1lSW5mbzpuLnRpbWVJbmZvLGV4dGVudDp7eG1pbjpOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkseW1pbjpOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkseG1heDpOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFkseW1heDpOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFksc3BhdGlhbFJlZmVyZW5jZTpuLnNwYXRpYWxSZWZlcmVuY2V8fHt3a2lkOjQzMjZ9fX0sYT13KGUpLGw9YS5uZXh0KCkudmFsdWU/LnRyaW0oKSxjPWEubmV4dCgpLnZhbHVlPy50cmltKCk7aWYoIWwpdGhyb3cgbmV3IGkoXCJjc3YtbGF5ZXI6ZW1wdHktY3N2XCIsXCJDU1YgaXMgZW1wdHlcIix7Y3N2OmV9KTtjb25zdHtkZWxpbWl0ZXI6bSxsb2NhdGlvbkluZm86ZH09RShsLGMsbik7aWYoIW0pdGhyb3cgbmV3IGkoXCJjc3YtbGF5ZXI6aW52YWxpZC1kZWxpbWl0ZXJcIixcIlVuYWJsZSB0byBkZXRlY3QgdGhlIGRlbGltaXRlciBmcm9tIENTVlwiLHtmaXJzdExpbmU6bCxzZWNvbmRMaW5lOmMscGFyc2luZ09wdGlvbnM6bn0pO2lmKCFkKXRocm93IG5ldyBpKFwiY3N2LWxheWVyOmxvY2F0aW9uLWZpZWxkcy1ub3QtZm91bmRcIixcIlVuYWJsZSB0byBpZGVudGlmeSBsYXRpdHVkZSBhbmQgbG9uZ2l0dWRlIGZpZWxkcyBmcm9tIHRoZSBDU1YgZmlsZVwiLHtmaXJzdExpbmU6bCxzZWNvbmRMaW5lOmMscGFyc2luZ09wdGlvbnM6bn0pO3IubG9jYXRpb25JbmZvPWQsci5kZWxpbWl0ZXI9bTtjb25zdHtuYW1lczp1LGFsaWFzZXM6cH09VChsLG0pLGY9aihlLHIuZGVsaW1pdGVyLHUscCxyLmxvY2F0aW9uSW5mbyk7aWYobi5maWVsZHM/Lmxlbmd0aCl7Y29uc3QgZT1uZXcgUyhuLmZpZWxkcyk7Zm9yKGNvbnN0IHQgb2YgZil7Y29uc3QgaT1lLmdldCh0Lm5hbWUpO2kmJk9iamVjdC5hc3NpZ24odCxpKX19aWYoIWYuc29tZSgoZT0+XCJlc3JpRmllbGRUeXBlT0lEXCI9PT1lLnR5cGUmJihzLm9iamVjdElkRmllbGQ9ZS5uYW1lLCEwKSkpKXtjb25zdCBlPXtuYW1lOlwiX19PQkpFQ1RJRFwiLGFsaWFzOlwiX19PQkpFQ1RJRFwiLHR5cGU6XCJlc3JpRmllbGRUeXBlT0lEXCIsZWRpdGFibGU6ITEsbnVsbGFibGU6ITF9O3Mub2JqZWN0SWRGaWVsZD1lLm5hbWUsZi51bnNoaWZ0KGUpfXMuZmllbGRzPWY7Y29uc3QgeT1uZXcgUyhzLmZpZWxkcyk7aWYoci5sb2NhdGlvbkluZm8mJihyLmxvY2F0aW9uSW5mby5sYXRpdHVkZUZpZWxkTmFtZT15LmdldChyLmxvY2F0aW9uSW5mby5sYXRpdHVkZUZpZWxkTmFtZSkubmFtZSxyLmxvY2F0aW9uSW5mby5sb25naXR1ZGVGaWVsZE5hbWU9eS5nZXQoci5sb2NhdGlvbkluZm8ubG9uZ2l0dWRlRmllbGROYW1lKS5uYW1lKSxzLnRpbWVJbmZvKXtjb25zdCBlPXMudGltZUluZm87aWYoZS5zdGFydFRpbWVGaWVsZCl7Y29uc3QgdD15LmdldChlLnN0YXJ0VGltZUZpZWxkKTt0PyhlLnN0YXJ0VGltZUZpZWxkPXQubmFtZSx0LnR5cGU9XCJlc3JpRmllbGRUeXBlRGF0ZVwiKTplLnN0YXJ0VGltZUZpZWxkPW51bGx9aWYoZS5lbmRUaW1lRmllbGQpe2NvbnN0IHQ9eS5nZXQoZS5lbmRUaW1lRmllbGQpO3Q/KGUuZW5kVGltZUZpZWxkPXQubmFtZSx0LnR5cGU9XCJlc3JpRmllbGRUeXBlRGF0ZVwiKTplLmVuZFRpbWVGaWVsZD1udWxsfWlmKGUudHJhY2tJZEZpZWxkKXtjb25zdCB0PXkuZ2V0KGUudHJhY2tJZEZpZWxkKTtlLnRyYWNrSWRGaWVsZD10P3QubmFtZTpudWxsfWUuc3RhcnRUaW1lRmllbGR8fGUuZW5kVGltZUZpZWxkfHwocy50aW1lSW5mbz1udWxsKX1yZXR1cm4gcn1leHBvcnR7ayBhcyBkZWZhdWx0fTtcbiIsIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI3L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnQgaGFzIGZyb21cIi4uLy4uLy4uLy4uL2NvcmUvaGFzLmpzXCI7aW1wb3J0e2Nsb25lIGFzIHR9ZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9sYW5nLmpzXCI7aW1wb3J0e3F1ZXJ5Q2FwYWJpbGl0aWVzIGFzIHN9ZnJvbVwiLi4vLi4vZGF0YS9RdWVyeUVuZ2luZUNhcGFiaWxpdGllcy5qc1wiO2ltcG9ydHtkZWZhdWx0UG9pbnRTeW1ib2xKU09OIGFzIHIsZGVmYXVsdFBvbHlsaW5lU3ltYm9sSlNPTiBhcyBlLGRlZmF1bHRQb2x5Z29uU3ltYm9sSlNPTiBhcyBwfWZyb21cIi4uLy4uLy4uLy4uL3N5bWJvbHMvc3VwcG9ydC9kZWZhdWx0c0pTT04uanNcIjtmdW5jdGlvbiBvKHQpe3JldHVybntyZW5kZXJlcjp7dHlwZTpcInNpbXBsZVwiLHN5bWJvbDpcImVzcmlHZW9tZXRyeVBvaW50XCI9PT10fHxcImVzcmlHZW9tZXRyeU11bHRpcG9pbnRcIj09PXQ/cjpcImVzcmlHZW9tZXRyeVBvbHlsaW5lXCI9PT10P2U6cH19fWNvbnN0IHU9L15bXyRhLXpBLVpdW18kYS16QS1aMC05XSokLztsZXQgbj0xO2Z1bmN0aW9uIGkodCxzKXtpZihoYXMoXCJlc3JpLWNzcC1yZXN0cmljdGlvbnNcIikpcmV0dXJuKCk9Pih7W3NdOm51bGwsLi4udH0pO3RyeXtsZXQgcj1gdGhpcy4ke3N9ID0gbnVsbDtgO2Zvcihjb25zdCBzIGluIHQpe3IrPWB0aGlzJHt1LnRlc3Qocyk/YC4ke3N9YDpgW1wiJHtzfVwiXWB9ID0gJHtKU09OLnN0cmluZ2lmeSh0W3NdKX07YH1jb25zdCBlPW5ldyBGdW5jdGlvbihgXFxuICAgICAgcmV0dXJuIGNsYXNzIEF0dHJpYnV0ZXNDbGFzcyQke24rK30ge1xcbiAgICAgICAgY29uc3RydWN0b3IoKSB7XFxuICAgICAgICAgICR7cn07XFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICBgKSgpO3JldHVybigpPT5uZXcgZX1jYXRjaChyKXtyZXR1cm4oKT0+KHtbc106bnVsbCwuLi50fSl9fWZ1bmN0aW9uIGEocz17fSl7cmV0dXJuW3tuYW1lOlwiTmV3IEZlYXR1cmVcIixkZXNjcmlwdGlvbjpcIlwiLHByb3RvdHlwZTp7YXR0cmlidXRlczp0KHMpfX1dfWZ1bmN0aW9uIGModCxyKXtyZXR1cm57YW5hbHl0aWNzOntzdXBwb3J0c0NhY2hlSGludDohMX0sYXR0YWNobWVudDpudWxsLGRhdGE6e2lzVmVyc2lvbmVkOiExLHN1cHBvcnRzQXR0YWNobWVudDohMSxzdXBwb3J0c006ITEsc3VwcG9ydHNaOnR9LG1ldGFkYXRhOntzdXBwb3J0c0FkdmFuY2VkRmllbGRQcm9wZXJ0aWVzOiExfSxvcGVyYXRpb25zOntzdXBwb3J0c0NhbGN1bGF0ZTohMSxzdXBwb3J0c1RydW5jYXRlOiExLHN1cHBvcnRzVmFsaWRhdGVTcWw6ITEsc3VwcG9ydHNBZGQ6cixzdXBwb3J0c0RlbGV0ZTpyLHN1cHBvcnRzRWRpdGluZzpyLHN1cHBvcnRzQ2hhbmdlVHJhY2tpbmc6ITEsc3VwcG9ydHNRdWVyeTohMCxzdXBwb3J0c1F1ZXJ5QW5hbHl0aWNzOiExLHN1cHBvcnRzUXVlcnlBdHRhY2htZW50czohMSxzdXBwb3J0c1F1ZXJ5VG9wRmVhdHVyZXM6ITEsc3VwcG9ydHNSZXNpemVBdHRhY2htZW50czohMSxzdXBwb3J0c1N5bmM6ITEsc3VwcG9ydHNVcGRhdGU6cixzdXBwb3J0c0V4Y2VlZHNMaW1pdFN0YXRpc3RpY3M6ITAsc3VwcG9ydHNBc3luY0NvbnZlcnQzRDohMX0scXVlcnk6cyxxdWVyeVJlbGF0ZWQ6e3N1cHBvcnRzQ291bnQ6ITAsc3VwcG9ydHNPcmRlckJ5OiEwLHN1cHBvcnRzUGFnaW5hdGlvbjohMCxzdXBwb3J0c0NhY2hlSGludDohMX0scXVlcnlUb3BGZWF0dXJlczp7c3VwcG9ydHNDYWNoZUhpbnQ6ITF9LGVkaXRpbmc6e3N1cHBvcnRzR2VvbWV0cnlVcGRhdGU6cixzdXBwb3J0c0dsb2JhbElkOiExLHN1cHBvcnRzUmV0dXJuU2VydmljZUVkaXRzSW5Tb3VyY2VTcGF0aWFsUmVmZXJlbmNlOiExLHN1cHBvcnRzUm9sbGJhY2tPbkZhaWx1cmU6ITEsc3VwcG9ydHNVcGRhdGVXaXRob3V0TTohMSxzdXBwb3J0c1VwbG9hZFdpdGhJdGVtSWQ6ITEsc3VwcG9ydHNEZWxldGVCeUFub255bW91czohMSxzdXBwb3J0c0RlbGV0ZUJ5T3RoZXJzOiExLHN1cHBvcnRzVXBkYXRlQnlBbm9ueW1vdXM6ITEsc3VwcG9ydHNVcGRhdGVCeU90aGVyczohMSxzdXBwb3J0c0FzeW5jQXBwbHlFZGl0czohMX19fWV4cG9ydHtjIGFzIGNyZWF0ZUNhcGFiaWxpdGllcyxpIGFzIGNyZWF0ZURlZmF1bHRBdHRyaWJ1dGVzRnVuY3Rpb24sYSBhcyBjcmVhdGVEZWZhdWx0VGVtcGxhdGUsbyBhcyBjcmVhdGVEcmF3aW5nSW5mb307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=