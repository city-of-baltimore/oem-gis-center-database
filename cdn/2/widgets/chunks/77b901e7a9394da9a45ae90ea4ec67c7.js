"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_core_layers_graphics_sources_geojson_GeoJSONSourceWorker_js"],{

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ C)
/* harmony export */ });
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/asyncUtils.js */ "./node_modules/@arcgis/core/core/asyncUtils.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../geometry/support/jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../featureConversionUtils.js */ "./node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js");
/* harmony import */ var _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../data/FeatureStore.js */ "./node_modules/@arcgis/core/layers/graphics/data/FeatureStore.js");
/* harmony import */ var _data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../data/projectionSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js");
/* harmony import */ var _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../data/QueryEngine.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js");
/* harmony import */ var _geojson_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./geojson.js */ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js");
/* harmony import */ var _support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../support/clientSideDefaults.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js");
/* harmony import */ var _support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../support/sourceUtils.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js");
/* harmony import */ var _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../support/FieldsIndex.js */ "./node_modules/@arcgis/core/layers/support/FieldsIndex.js");
/* harmony import */ var _support_fieldType_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../support/fieldType.js */ "./node_modules/@arcgis/core/layers/support/fieldType.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const O={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class C{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const i=[];await this._checkProjection(e.spatialReference);let r=null;e.url&&(r=await this._fetch(t?.signal));const n=(0,_geojson_js__WEBPACK_IMPORTED_MODULE_11__.inferLayerProperties)(r,{geometryType:e.geometryType}),o=e.fields||n.fields||[],l=null!=e.hasZ?e.hasZ:n.hasZ,u=n.geometryType;let d=e.objectIdField||n.objectIdFieldName||"__OBJECTID";const p=e.spatialReference||_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84;let c=e.timeInfo;o===n.fields&&n.unknownFields.length>0&&i.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:n.unknownFields}});let y=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__["default"](o).get(d);y?("esriFieldTypeString"!==y.type&&(y.type="esriFieldTypeOID"),y.editable=!1,y.nullable=!1,d=y.name):(y={alias:d,name:d,type:"string"===n.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},o.unshift(y));const m={};for(const a of o){if(null==a.name&&(a.name=a.alias),null==a.alias&&(a.alias=a.name),!a.name)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer:invalid-field-name","field name is missing",{field:a});if(!_support_fieldType_js__WEBPACK_IMPORTED_MODULE_15__.kebabDict.jsonValues.includes(a.type))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer:invalid-field-type",`invalid type for field "${a.name}"`,{field:a});if(a.name!==y.name){const e=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_16__.getFieldDefaultValue)(a);void 0!==e&&(m[a.name]=e)}}this._fieldsIndex=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__["default"](o);const _=this._fieldsIndex.requiredFields.indexOf(y);if(_>-1&&this._fieldsIndex.requiredFields.splice(_,1),c){if(c.startTimeField){const e=this._fieldsIndex.get(c.startTimeField);e?(c.startTimeField=e.name,e.type="esriFieldTypeDate"):c.startTimeField=null}if(c.endTimeField){const e=this._fieldsIndex.get(c.endTimeField);e?(c.endTimeField=e.name,e.type="esriFieldTypeDate"):c.endTimeField=null}if(c.trackIdField){const e=this._fieldsIndex.get(c.trackIdField);e?c.trackIdField=e.name:(c.trackIdField=null,i.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:c}}))}c.startTimeField||c.endTimeField||(i.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:c}}),c=null)}const I=u?(0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__.createDrawingInfo)(u):void 0,b={warnings:i,featureErrors:[],layerDefinition:{...O,drawingInfo:I??void 0,templates:(0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__.createDefaultTemplate)(m),extent:void 0,geometryType:u,objectIdField:d,fields:o,hasZ:!!l,timeInfo:c}};this._queryEngine=new _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_10__.QueryEngine({fields:o,geometryType:u,hasM:!1,hasZ:l,objectIdField:d,spatialReference:p,timeInfo:c,featureStore:new _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_8__["default"]({geometryType:u,hasM:!1,hasZ:l}),cacheSpatialQueries:!0}),this._createDefaultAttributes=(0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__.createDefaultAttributesFunction)(m,d);const w=await this._createFeatures(r);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,w);const T=this._normalizeFeatures(w,b.warnings,b.featureErrors);this._queryEngine.featureStore.addMany(T);const{fullExtent:x,timeExtent:q}=await this._queryEngine.fetchRecomputedExtents();if(b.layerDefinition.extent=x,q){const{start:e,end:t}=q;b.layerDefinition.timeInfo.timeExtent=[e,t]}return b}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.loadGeometryEngineForSimplify)(t,s),(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.checkProjectionSupport)(e.adds,t),(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.checkProjectionSupport)(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,_core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_1__.createTask)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(e)||_core_Logger_js__WEBPACK_IMPORTED_MODULE_3__["default"].getLogger("esri.layers.GeoJSONLayer").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:n,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:n,timeExtent:a}}async _createFeatures(e){if(null==e)return[];const{geometryType:t,hasZ:s,objectIdField:i}=this._queryEngine,r=(0,_geojson_js__WEBPACK_IMPORTED_MODULE_11__.createOptimizedFeatures)(e,{geometryType:t,hasZ:s,objectIdField:i});if(!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.equals)(this._queryEngine.spatialReference,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84))for(const n of r)null!=n.geometry&&(n.geometry=(0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertFromGeometry)((0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.project)((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertToGeometry)(n.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84,this._queryEngine.spatialReference)));return r}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:s,customParameters:i}=this._loadOptions,r=(await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(s,{responseType:"json",query:{...i},signal:t})).data;return await (0,_geojson_js__WEBPACK_IMPORTED_MODULE_11__.validateGeoJSON)(r),r}_normalizeFeatures(e,t,s){const{objectIdField:i}=this._queryEngine,r=[];for(const n of e){const e=this._createDefaultAttributes(),a=(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.mixAttributes)(this._fieldsIndex,e,n.attributes,!0,t);a?s?.push(a):(this._assignObjectId(e,n.attributes,!0),n.attributes=e,n.objectId=e[i],r.push(n))}return r}async _applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),s&&s.length&&this._applyUpdateEdits(r,s),i&&i.length){for(const e of i)r.deleteResults.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditSuccessResult)(e));this._queryEngine.featureStore.removeManyById(i)}const{fullExtent:n,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:n,timeExtent:a,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:i,hasM:r,hasZ:a,objectIdField:o,spatialReference:l,featureStore:u}=this._queryEngine,p=[];for(const d of t){if(d.geometry&&i!==(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_5__.getJsonType)(d.geometry)){s.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.mixAttributes)(this._fieldsIndex,t,d.attributes);if(r)s.push(r);else{if(this._assignObjectId(t,d.attributes),d.attributes=t,null!=d.uid){const t=d.attributes[o];e.uidToObjectId[d.uid]=t}if(null!=d.geometry){const e=d.geometry.spatialReference??l;d.geometry=(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.project)((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.simplify)(d.geometry,e),e,l)}p.push(d),s.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditSuccessResult)(d.attributes[o]))}}u.addMany((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertFromFeatures)([],p,i,a,r,o))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:i,hasZ:r,objectIdField:a,spatialReference:o,featureStore:l}=this._queryEngine;for(const u of t){const{attributes:t,geometry:d}=u,h=t&&t[a];if(null==h){e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)(`Identifier field ${a} missing`));continue}if(!l.has(h)){e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)(`Feature with object id ${h} missing`));continue}const y=(0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertToFeature)(l.getFeature(h),s,r,i);if(null!=d){if(s!==(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_5__.getJsonType)(d)){e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)("Incorrect geometry type."));continue}const t=d.spatialReference??o;y.geometry=(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.project)((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.simplify)(d,t),t,o)}if(t){const s=(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.mixAttributes)(this._fieldsIndex,y.attributes,t);if(s){e.push(s);continue}}l.add((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertFromFeature)(y,s,r,i,a)),e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditSuccessResult)(h))}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===s.type)return()=>s.name+"-"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const r of t)r.objectId&&(i=Math.max(i,r.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.checkProjectionSupport)(_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84,e)}catch{throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer","Projection not supported")}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createOptimizedFeatures": () => (/* binding */ I),
/* harmony export */   "getGeometryType": () => (/* binding */ s),
/* harmony export */   "inferLayerProperties": () => (/* binding */ L),
/* harmony export */   "validateGeoJSON": () => (/* binding */ T)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../OptimizedFeature.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedFeature.js");
/* harmony import */ var _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../OptimizedGeometry.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function s(e){return i[e]}function*c(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*u(e){if(e)switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function*l(e,o={}){const{geometryType:r,objectIdField:i}=o;for(const c of e){const{geometry:e,properties:u,id:l}=c;if(e&&s(e.type)!==r)continue;const f=u||{};let a;i&&(a=f[i],null==l||a||(f[i]=a=l));const y=new _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_1__.OptimizedFeature(e?g(new _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__["default"],e,o):null,f,null,a??void 0);yield y}}function f(e){for(const t of e)if(t.length>2)return!0;return!1}function a(e){return!p(e)}function y(e){return p(e)}function p(e){let t=0;for(let n=0;n<e.length;n++){const o=e[n],r=e[(n+1)%e.length];t+=o[0]*r[1]-r[0]*o[1]}return t<=0}function d(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function g(e,t,n){switch(t.type){case"LineString":return m(e,t,n);case"MultiLineString":return h(e,t,n);case"MultiPoint":return w(e,t,n);case"MultiPolygon":return P(e,t,n);case"Point":return b(e,t,n);case"Polygon":return j(e,t,n)}}function m(e,t,n){return G(e,t.coordinates,n),e}function h(e,t,n){for(const o of t.coordinates)G(e,o,n);return e}function w(e,t,n){return G(e,t.coordinates,n),e}function P(e,t,n){for(const o of t.coordinates){S(e,o[0],n);for(let t=1;t<o.length;t++)F(e,o[t],n)}return e}function b(e,t,n){return k(e,t.coordinates,n),e}function j(e,t,n){const o=t.coordinates;S(e,o[0],n);for(let r=1;r<o.length;r++)F(e,o[r],n);return e}function S(e,t,n){const o=d(t);a(o)?M(e,o,n):G(e,o,n)}function F(e,t,n){const o=d(t);y(o)?M(e,o,n):G(e,o,n)}function G(e,t,n){for(const o of t)k(e,o,n);e.lengths.push(t.length)}function M(e,t,n){for(let o=t.length-1;o>=0;o--)k(e,t[o],n);e.lengths.push(t.length)}function k(e,t,n){const[o,r,i]=t;e.coords.push(o,r),n.hasZ&&e.coords.push(i||0)}function O(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function T(t){if(!t)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==t.type&&"FeatureCollection"!==t.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:t});const{crs:n}=t;if(!n)return;const o="string"==typeof n?n:"name"===n.type?n.properties.name:"EPSG"===n.type?n.properties.code:null,r=new RegExp(".*(CRS84H?|4326)$","i");if(!o||!r.test(o))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:n})}function L(e,t={}){const n=[],i=new Set,l=new Set;let a,y=!1,p=null,d=!1,{geometryType:g=null}=t,m=!1;for(const r of c(e)){const{geometry:e,properties:t,id:c}=r;if(!e||(g||(g=s(e.type)),s(e.type)===g)){if(!y){y=f(u(e))}if(d||(d=null!=c,d&&(a=typeof c,t&&(p=Object.keys(t).filter((e=>t[e]===c))))),t&&p&&d&&null!=c&&(p.length>1?p=p.filter((e=>t[e]===c)):1===p.length&&(p=t[p[0]]===c?p:[])),!m&&t){let e=!0;for(const r in t){if(i.has(r))continue;const s=t[r];if(null==s){e=!1,l.add(r);continue}const c=O(s);if("unknown"===c){l.add(r);continue}l.delete(r),i.add(r);const u=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__.normalizeFieldName)(r);u&&n.push({name:u,alias:r,type:c})}m=e}}}const h=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__.normalizeFieldName)(1===p?.length&&p[0]||null)??void 0;if(h)for(const o of n)if(o.name===h&&(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__.isNumericField)(o)){o.type="esriFieldTypeOID";break}return{fields:n,geometryType:g,hasZ:y,objectIdFieldName:h,objectIdFieldType:a,unknownFields:Array.from(l)}}function I(e,t){return Array.from(l(c(e),t))}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createCapabilities": () => (/* binding */ c),
/* harmony export */   "createDefaultAttributesFunction": () => (/* binding */ i),
/* harmony export */   "createDefaultTemplate": () => (/* binding */ a),
/* harmony export */   "createDrawingInfo": () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/lang.js */ "./node_modules/@arcgis/core/core/lang.js");
/* harmony import */ var _data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/QueryEngineCapabilities.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngineCapabilities.js");
/* harmony import */ var _symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../symbols/support/defaultsJSON.js */ "./node_modules/@arcgis/core/symbols/support/defaultsJSON.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function o(t){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===t||"esriGeometryMultipoint"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPointSymbolJSON:"esriGeometryPolyline"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPolylineSymbolJSON:_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPolygonSymbolJSON}}}const u=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let n=1;function i(t,s){if((0,_core_has_js__WEBPACK_IMPORTED_MODULE_0__["default"])("esri-csp-restrictions"))return()=>({[s]:null,...t});try{let r=`this.${s} = null;`;for(const s in t){r+=`this${u.test(s)?`.${s}`:`["${s}"]`} = ${JSON.stringify(t[s])};`}const e=new Function(`\n      return class AttributesClass$${n++} {\n        constructor() {\n          ${r};\n        }\n      }\n    `)();return()=>new e}catch(r){return()=>({[s]:null,...t})}}function a(s={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_1__.clone)(s)}}]}function c(t,r){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:t},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:r,supportsDelete:r,supportsEditing:r,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:r,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:_data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__.queryCapabilities,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:r,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createFeatureEditErrorResult": () => (/* binding */ u),
/* harmony export */   "createFeatureEditSuccessResult": () => (/* binding */ c),
/* harmony export */   "loadGeometryEngineForSimplify": () => (/* binding */ y),
/* harmony export */   "mixAttributes": () => (/* binding */ d),
/* harmony export */   "simplify": () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class o{constructor(){this.code=null,this.description=null}}class l{constructor(e){this.error=new o,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function u(e){return new l(e)}class a{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function c(e){return new a(e)}const f=new Set;function d(e,i,r,s=!1,o){f.clear();for(const l in r){const a=e.get(l);if(!a)continue;const c=r[l],d=m(a,c);if(d!==c&&o&&o.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:a,originalValue:c,sanitizedValue:d}}),f.add(a.name),a&&(s||a.editable)){const e=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.validateFieldValue)(a,d);if(e)return u((0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.validationErrorToString)(e,a,d));i[a.name]=d}}for(const t of e?.requiredFields??[])if(!f.has(t.name))return u(`missing required field "${t.name}"`);return null}function m(e,t){let n=t;return"string"==typeof t&&(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.isNumericField)(e)?n=parseFloat(t):null!=t&&(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.isStringField)(e)&&"string"!=typeof t&&(n=String(t)),(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeNullFieldValue)(n)}let p;function h(t,n){if(!t||!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_0__.isValid)(n))return t;if("rings"in t||"paths"in t){if(null==p)throw new TypeError("geometry engine not loaded");return p.simplify(n,t)}return t}async function g(){return null==p&&(p=await Promise.all(/*! import() */[__webpack_require__.e("vendors-node_modules_arcgis_core_chunks_geometryEngineBase_js"), __webpack_require__.e("node_modules_arcgis_core_geometry_geometryEngineJSON_js-_997e1")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../../geometry/geometryEngineJSON.js */ "./node_modules/@arcgis/core/geometry/geometryEngineJSON.js"))),p}async function y(t,n){!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_0__.isValid)(t)||"esriGeometryPolygon"!==n&&"esriGeometryPolyline"!==n||await g()}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,