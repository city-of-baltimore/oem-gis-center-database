"use strict";
(self["webpackChunkexb_client"] = self["webpackChunkexb_client"] || []).push([["vendors-node_modules_arcgis_core_layers_ogc_wfsUtils_js"],{

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createOptimizedFeatures": () => (/* binding */ I),
/* harmony export */   "getGeometryType": () => (/* binding */ s),
/* harmony export */   "inferLayerProperties": () => (/* binding */ L),
/* harmony export */   "validateGeoJSON": () => (/* binding */ T)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../OptimizedFeature.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedFeature.js");
/* harmony import */ var _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../OptimizedGeometry.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function s(e){return i[e]}function*c(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*u(e){if(e)switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function*l(e,o={}){const{geometryType:r,objectIdField:i}=o;for(const c of e){const{geometry:e,properties:u,id:l}=c;if(e&&s(e.type)!==r)continue;const f=u||{};let a;i&&(a=f[i],null==l||a||(f[i]=a=l));const y=new _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_1__.OptimizedFeature(e?g(new _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__["default"],e,o):null,f,null,a??void 0);yield y}}function f(e){for(const t of e)if(t.length>2)return!0;return!1}function a(e){return!p(e)}function y(e){return p(e)}function p(e){let t=0;for(let n=0;n<e.length;n++){const o=e[n],r=e[(n+1)%e.length];t+=o[0]*r[1]-r[0]*o[1]}return t<=0}function d(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function g(e,t,n){switch(t.type){case"LineString":return m(e,t,n);case"MultiLineString":return h(e,t,n);case"MultiPoint":return w(e,t,n);case"MultiPolygon":return P(e,t,n);case"Point":return b(e,t,n);case"Polygon":return j(e,t,n)}}function m(e,t,n){return G(e,t.coordinates,n),e}function h(e,t,n){for(const o of t.coordinates)G(e,o,n);return e}function w(e,t,n){return G(e,t.coordinates,n),e}function P(e,t,n){for(const o of t.coordinates){S(e,o[0],n);for(let t=1;t<o.length;t++)F(e,o[t],n)}return e}function b(e,t,n){return k(e,t.coordinates,n),e}function j(e,t,n){const o=t.coordinates;S(e,o[0],n);for(let r=1;r<o.length;r++)F(e,o[r],n);return e}function S(e,t,n){const o=d(t);a(o)?M(e,o,n):G(e,o,n)}function F(e,t,n){const o=d(t);y(o)?M(e,o,n):G(e,o,n)}function G(e,t,n){for(const o of t)k(e,o,n);e.lengths.push(t.length)}function M(e,t,n){for(let o=t.length-1;o>=0;o--)k(e,t[o],n);e.lengths.push(t.length)}function k(e,t,n){const[o,r,i]=t;e.coords.push(o,r),n.hasZ&&e.coords.push(i||0)}function O(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function T(t){if(!t)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==t.type&&"FeatureCollection"!==t.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:t});const{crs:n}=t;if(!n)return;const o="string"==typeof n?n:"name"===n.type?n.properties.name:"EPSG"===n.type?n.properties.code:null,r=new RegExp(".*(CRS84H?|4326)$","i");if(!o||!r.test(o))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:n})}function L(e,t={}){const n=[],i=new Set,l=new Set;let a,y=!1,p=null,d=!1,{geometryType:g=null}=t,m=!1;for(const r of c(e)){const{geometry:e,properties:t,id:c}=r;if(!e||(g||(g=s(e.type)),s(e.type)===g)){if(!y){y=f(u(e))}if(d||(d=null!=c,d&&(a=typeof c,t&&(p=Object.keys(t).filter((e=>t[e]===c))))),t&&p&&d&&null!=c&&(p.length>1?p=p.filter((e=>t[e]===c)):1===p.length&&(p=t[p[0]]===c?p:[])),!m&&t){let e=!0;for(const r in t){if(i.has(r))continue;const s=t[r];if(null==s){e=!1,l.add(r);continue}const c=O(s);if("unknown"===c){l.add(r);continue}l.delete(r),i.add(r);const u=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__.normalizeFieldName)(r);u&&n.push({name:u,alias:r,type:c})}m=e}}}const h=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__.normalizeFieldName)(1===p?.length&&p[0]||null)??void 0;if(h)for(const o of n)if(o.name===h&&(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__.isNumericField)(o)){o.type="esriFieldTypeOID";break}return{fields:n,geometryType:g,hasZ:y,objectIdFieldName:h,objectIdFieldType:a,unknownFields:Array.from(l)}}function I(e,t){return Array.from(l(c(e),t))}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/ogc/dateUtils.js":
/*!***********************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/ogc/dateUtils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseDate": () => (/* binding */ e),
/* harmony export */   "parseJSDate": () => (/* binding */ n)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function e(e){return t(e)??n(e)}function n(e){const n=new Date(e).getTime();return Number.isNaN(n)?null:n}function t(e){const n=s.exec(e);if(!n?.groups)return null;const t=n.groups,u=+t.year,o=+t.month-1,r=+t.day,f=+(t.hours??"0"),i=+(t.minutes??"0"),d=+(t.seconds??"0");if(f>23)return null;if(i>59)return null;if(d>59)return null;const l=t.ms??"0",c=l?+l.padEnd(3,"0").substring(0,3):0;let a;if(t.isUTC)a=Date.UTC(u,o,r,f,i,d,c);else if(t.offsetSign){const e=+t.offsetHours,n=+t.offsetMinutes;a=6e4*("+"===t.offsetSign?-1:1)*(60*e+n)+Date.UTC(u,o,r,f,i,d,c)}else a=new Date(u,o,r,f,i,d,c).getTime();return Number.isNaN(a)?null:a}const s=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/ogc/wfsUtils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/ogc/wfsUtils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WFS_OID_FIELD_NAME": () => (/* binding */ S),
/* harmony export */   "describeFeatureType": () => (/* binding */ z),
/* harmony export */   "findFeatureType": () => (/* binding */ M),
/* harmony export */   "getCapabilities": () => (/* binding */ v),
/* harmony export */   "getFeature": () => (/* binding */ H),
/* harmony export */   "getFeatureCount": () => (/* binding */ K),
/* harmony export */   "getFeatureTypeInfo": () => (/* binding */ W),
/* harmony export */   "getWFSLayerInfo": () => (/* binding */ V),
/* harmony export */   "parseDescribeFeatureTypeResponse": () => (/* binding */ _),
/* harmony export */   "parseGetCapabilitiesResponse": () => (/* binding */ U),
/* harmony export */   "prepareWFSLayerFields": () => (/* binding */ Y)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_iteratorUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/iteratorUtils.js */ "./node_modules/@arcgis/core/core/iteratorUtils.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _geometry_projection_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../geometry/projection.js */ "./node_modules/@arcgis/core/geometry/projection.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _geometry_support_typeUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../geometry/support/typeUtils.js */ "./node_modules/@arcgis/core/geometry/support/typeUtils.js");
/* harmony import */ var _graphics_sources_geojson_geojson_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../graphics/sources/geojson/geojson.js */ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js");
/* harmony import */ var _dateUtils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dateUtils.js */ "./node_modules/@arcgis/core/layers/ogc/dateUtils.js");
/* harmony import */ var _xmlUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./xmlUtils.js */ "./node_modules/@arcgis/core/layers/ogc/xmlUtils.js");
/* harmony import */ var _support_Field_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../support/Field.js */ "./node_modules/@arcgis/core/layers/support/Field.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const T="xlink:href",F="2.0.0",S="__esri_wfs_id__",x="wfs-layer:getWFSLayerTypeInfo-error",C="wfs-layer:empty-service",E="wfs-layer:feature-type-not-found",N="wfs-layer:geojson-not-supported",P="wfs-layer:kvp-encoding-not-supported",R="wfs-layer:malformed-json",j="wfs-layer:unknown-geometry-type",A="wfs-layer:unknown-field-type",G="wfs-layer:unsupported-spatial-reference",k="wfs-layer:unsupported-wfs-version";async function v(t,r){const n=U((await (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:F,...r?.customParameters},signal:r?.signal})).data);return O(t,n),n}function U(e){const t=Z(e);te(t),re(t);const n=t.firstElementChild,a=(0,_core_iteratorUtils_js__WEBPACK_IMPORTED_MODULE_3__.cache)(L(n));return{operations:I(n),get featureTypes(){return Array.from(a())},readFeatureTypes:a}}const D=new Set(["json","application/json","geojson","application/json; subtype=geojson"]);function I(e){let r=!1;const n={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};if((0,_xmlUtils_js__WEBPACK_IMPORTED_MODULE_11__.visitXML)(e,{OperationsMetadata:{Operation:e=>{switch(e.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:e=>{n.GetCapabilities.url=e.getAttribute(T)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:e=>{n.DescribeFeatureType.url=e.getAttribute(T)}}}};case"GetFeature":return{DCP:{HTTP:{Get:e=>{n.GetFeature.url=e.getAttribute(T)}}},Parameter:e=>{if("outputFormat"===e.getAttribute("name"))return{AllowedValues:{Value:e=>{const t=e.textContent;t&&D.has(t.toLowerCase())&&(n.GetFeature.outputFormat=t)}}}}}}},Constraint:e=>{switch(e.getAttribute("name")){case"KVPEncoding":return{DefaultValue:e=>{r="true"===e.textContent.toLowerCase()}};case"ImplementsResultPaging":return{DefaultValue:e=>{n.GetFeature.supportsPagination="true"===e.textContent.toLowerCase()}}}}}}),!r)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](P,"WFS service doesn't support key/value pair (KVP) encoding");if(null==n.GetFeature.outputFormat)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](N,"WFS service doesn't support GeoJSON output format");return n}function O(e,t){(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.isHTTPSProtocol)(e)&&((0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.hasSameOrigin)(e,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.toHTTPS)(t.operations.DescribeFeatureType.url)),(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.hasSameOrigin)(e,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.toHTTPS)(t.operations.GetFeature.url)))}function L(e){return (0,_xmlUtils_js__WEBPACK_IMPORTED_MODULE_11__.iterateXML)(e,{FeatureTypeList:{FeatureType:e=>{const t={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",supportedSpatialReferences:[]},r=new Set([4326]),n=e=>{const t=parseInt(e.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);Number.isNaN(t)||r.add(t)};return (0,_xmlUtils_js__WEBPACK_IMPORTED_MODULE_11__.visitXML)(e,{Name:e=>{const{name:r,prefix:n}=ee(e.textContent);t.typeName=`${n}:${r}`,t.name=r,t.namespacePrefix=n,t.namespaceUri=e.lookupNamespaceURI(n)},Abstract:e=>{t.description=e.textContent},Title:e=>{t.title=e.textContent},WGS84BoundingBox:e=>{t.extent=$(e)},DefaultSRS:n,DefaultCRS:n,OtherSRS:n,OtherCRS:n}),t.title||(t.title=t.name),t.supportedSpatialReferences.push(...r),t}}})}function $(e){let t,r,n,a;for(const o of e.children)switch(o.localName){case"LowerCorner":[t,r]=o.textContent.split(" ").map((e=>Number.parseFloat(e)));break;case"UpperCorner":[n,a]=o.textContent.split(" ").map((e=>Number.parseFloat(e)))}return{xmin:t,ymin:r,xmax:n,ymax:a,spatialReference:_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.WGS84}}function M(e,t,r){return (0,_core_iteratorUtils_js__WEBPACK_IMPORTED_MODULE_3__.find)(e,(e=>r?e.name===t&&e.namespaceUri===r:e.typeName===t||e.name===t))}async function V(e,t,r,n={}){const{featureType:a,extent:o}=await W(e,t,r,n),{fields:s,geometryType:i,swapXY:p,objectIdField:u,geometryField:l}=await X(e,a.typeName,n);return{url:e.operations.GetCapabilities.url,name:a.name,namespaceUri:a.namespaceUri,fields:s,geometryField:l,geometryType:i,objectIdField:u,spatialReference:n.spatialReference??_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_13__["default"].WGS84,extent:o,swapXY:p,wfsCapabilities:e,customParameters:n.customParameters}}async function W(e,r,n,a={}){const{spatialReference:o=_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_13__["default"].WGS84}=a,s=e.readFeatureTypes(),i=r?M(s,r,n):s.next().value;if(null==i)throw r?new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](E,`The type '${r}' could not be found in the service`):new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](C,"The service is empty");let m=new _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_14__["default"]({...i.extent,spatialReference:o});if(!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.equals)(o,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.WGS84))try{await (0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_6__.initializeProjection)(_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.WGS84,o,void 0,a),m=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_6__.project)(m,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_7__.WGS84)}catch{throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](G,"Projection not supported")}return{extent:m,spatialReference:o,featureType:i}}async function X(e,r,n={}){const[o,s]=await (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.eachAlways)([z(e.operations.DescribeFeatureType.url,r,n),q(e,r,n)]);if(o.error||s.error)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](x,`An error occurred while getting info about the feature type '${r}'`,{error:o.error||s.error});const{fields:i,errors:p}=o.value??{},u=o.value?.geometryType||s.value?.geometryType,l=s.value?.swapXY??!1;if(null==u)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](j,`The geometry type could not be determined for type '${r}`,{typeName:r,geometryType:u,fields:i,errors:p});return{...Y(i??[]),geometryType:u,swapXY:l}}function Y(e){const t=e.find((e=>"geometry"===e.type));let r=e.find((e=>"oid"===e.type));return e=e.filter((e=>"geometry"!==e.type)),r||(r=new _support_Field_js__WEBPACK_IMPORTED_MODULE_12__["default"]({name:S,type:"oid",alias:S}),e.unshift(r)),{geometryField:t?.name??null,objectIdField:r.name,fields:e}}async function q(t,r,n={}){let a,o=!1;const[s,i]=await Promise.all([H(t.operations.GetFeature.url,r,t.operations.GetFeature.outputFormat,{...n,count:1}),(0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(t.operations.GetFeature.url,{responseType:"text",query:B(r,void 0,{...n,count:1}),signal:n?.signal})]),p="FeatureCollection"===s.type&&s.features[0]?.geometry;if(p){let e;switch(a=_geometry_support_typeUtils_js__WEBPACK_IMPORTED_MODULE_8__.featureGeometryTypeKebabDictionary.fromJSON((0,_graphics_sources_geojson_geojson_js__WEBPACK_IMPORTED_MODULE_9__.getGeometryType)(p.type)),p.type){case"Point":e=p.coordinates;break;case"LineString":case"MultiPoint":e=p.coordinates[0];break;case"MultiLineString":case"Polygon":e=p.coordinates[0][0];break;case"MultiPolygon":e=p.coordinates[0][0][0]}const t=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(i.data);if(t){const r=e[0].toFixed(3),n=e[1].toFixed(3),a=parseFloat(t[1]).toFixed(3);r===parseFloat(t[2]).toFixed(3)&&n===a&&(o=!0)}}return{geometryType:a,swapXY:o}}async function z(t,r,n){return _(r,(await (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:F,TYPENAME:r,...n?.customParameters},signal:n?.signal})).data)}function _(e,r){const{name:a}=ee(e),o=Z(r);re(o);const s=(0,_core_iteratorUtils_js__WEBPACK_IMPORTED_MODULE_3__.find)((0,_xmlUtils_js__WEBPACK_IMPORTED_MODULE_11__.iterateXML)(o.firstElementChild,{element:e=>({name:e.getAttribute("name"),typeName:ee(e.getAttribute("type")).name})}),(({name:e})=>e===a));if(null!=s){const e=(0,_core_iteratorUtils_js__WEBPACK_IMPORTED_MODULE_3__.find)((0,_xmlUtils_js__WEBPACK_IMPORTED_MODULE_11__.iterateXML)(o.firstElementChild,{complexType:e=>e}),(e=>e.getAttribute("name")===s.typeName));if(null!=e)return Q(e)}throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](E,`Type '${e}' not found in document`,{document:(new XMLSerializer).serializeToString(o)})}const J=new Set(["objectid","fid"]);function Q(e){const r=[],n=[];let a;const o=(0,_xmlUtils_js__WEBPACK_IMPORTED_MODULE_11__.iterateXML)(e,{complexContent:{extension:{sequence:{element:e=>e}}}});for(const s of o){const o=s.getAttribute("name");if(!o)continue;let i,p;if(s.hasAttribute("type")?i=ee(s.getAttribute("type")).name:(0,_xmlUtils_js__WEBPACK_IMPORTED_MODULE_11__.visitXML)(s,{simpleType:{restriction:e=>(i=ee(e.getAttribute("base")).name,{maxLength:e=>{p=+e.getAttribute("value")}})}}),!i)continue;const u="true"===s.getAttribute("nillable");let l=!1;switch(i.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":n.push(new _support_Field_js__WEBPACK_IMPORTED_MODULE_12__["default"]({name:o,alias:o,type:"integer",nullable:u}));break;case"float":case"double":case"decimal":n.push(new _support_Field_js__WEBPACK_IMPORTED_MODULE_12__["default"]({name:o,alias:o,type:"double",nullable:u}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":n.push(new _support_Field_js__WEBPACK_IMPORTED_MODULE_12__["default"]({name:o,alias:o,type:"string",nullable:u,length:p??255}));break;case"datetime":case"date":n.push(new _support_Field_js__WEBPACK_IMPORTED_MODULE_12__["default"]({name:o,alias:o,type:"date",nullable:u,length:p??36}));break;case"pointpropertytype":a="point",l=!0;break;case"multipointpropertytype":a="multipoint",l=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":a="polyline",l=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":a="polygon",l=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":l=!0,r.push(new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](j,`geometry type '${i}' is not supported`,{type:(new XMLSerializer).serializeToString(e)}));break;default:r.push(new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](A,`Unknown field type '${i}'`,{type:(new XMLSerializer).serializeToString(e)}))}l&&n.push(new _support_Field_js__WEBPACK_IMPORTED_MODULE_12__["default"]({name:o,alias:o,type:"geometry",nullable:u}))}for(const t of n)if("integer"===t.type&&!t.nullable&&J.has(t.name.toLowerCase())){t.type="oid";break}return{geometryType:a,fields:n,errors:r}}async function H(r,n,a,o){let{data:s}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(r,{responseType:"text",query:B(n,a,o),signal:o?.signal});s=s.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{if(o?.dateFields?.length){const e=new Set(o.dateFields);return JSON.parse(s,((t,r)=>e.has(t)?(0,_dateUtils_js__WEBPACK_IMPORTED_MODULE_10__.parseDate)(r):r))}return JSON.parse(s)}catch(i){throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](R,"Error while parsing the response",{response:s,error:i})}}function B(e,t,r){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:F,TYPENAMES:e,OUTPUTFORMAT:t,SRSNAME:"EPSG:4326",STARTINDEX:r?.startIndex,COUNT:r?.count,...r?.customParameters}}async function K(t,r,n){const a=Z((await (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(t,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:F,TYPENAMES:r,RESULTTYPE:"hits",...n?.customParameters},signal:n?.signal})).data);re(a);const o=Number.parseFloat(a.firstElementChild.getAttribute("numberMatched"));return Number.isNaN(o)?0:o}function Z(e){return(new DOMParser).parseFromString(e.trim(),"text/xml")}function ee(e){const[t,r]=e.split(":");return{prefix:r?t:"",name:r??t}}function te(e){const r=e.firstElementChild?.getAttribute("version");if(r&&r!==F)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](k,`Unsupported WFS version ${r}. Supported version: ${F}`)}function re(e){let r="",n="";if((0,_xmlUtils_js__WEBPACK_IMPORTED_MODULE_11__.visitXML)(e.firstElementChild,{Exception:e=>(r=e.getAttribute("exceptionCode"),{ExceptionText:e=>{n=e.textContent}})}),r)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"](`wfs-layer:${r}`,n)}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/ogc/xmlUtils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/ogc/xmlUtils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "iterateXML": () => (/* binding */ n),
/* harmony export */   "visitXML": () => (/* binding */ o)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function o(n,c){if(n&&c)for(const f of n.children)if(f.localName in c){const n=c[f.localName];if("function"==typeof n){const c=n(f);c&&o(f,c)}else o(f,n)}}function*n(o,c){for(const f of o.children)if(f.localName in c){const o=c[f.localName];"function"==typeof o?yield o(f):yield*n(f,o)}}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,